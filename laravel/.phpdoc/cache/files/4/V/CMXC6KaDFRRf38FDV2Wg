1711241706
waR3U4bTeM%3A8dc1430e1ddf6c8a78bddf148a763aa4-4bd69db9800d0a77bf2a1f607cf819cb
s:17668:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjRiZDY5ZGI5ODAwZDBhNzdiZjJhMWY2MDdjZjgxOWNiIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTc6InJlb3JkZXIuYmxhZGUucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NjM6InZlbmRvci9iYWNrcGFjay9jcnVkL3NyYy9yZXNvdXJjZXMvdmlld3MvY3J1ZC9yZW9yZGVyLmJsYWRlLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6OTYxNjoiQGV4dGVuZHMoYmFja3BhY2tfdmlldygnYmxhbmsnKSkKCkBwaHAKICAgICRkZWZhdWx0QnJlYWRjcnVtYnMgPSBbCiAgICAgIHRyYW5zKCdiYWNrcGFjazo6Y3J1ZC5hZG1pbicpID0+IHVybChjb25maWcoJ2JhY2twYWNrLmJhc2Uucm91dGVfcHJlZml4JyksICdkYXNoYm9hcmQnKSwKICAgICAgJGNydWQtPmVudGl0eV9uYW1lX3BsdXJhbCA9PiB1cmwoJGNydWQtPnJvdXRlKSwKICAgICAgdHJhbnMoJ2JhY2twYWNrOjpjcnVkLnJlb3JkZXInKSA9PiBmYWxzZSwKICAgIF07CgogICAgLy8gaWYgYnJlYWRjcnVtYnMgYXJlbid0IGRlZmluZWQgaW4gdGhlIENydWRDb250cm9sbGVyLCB1c2UgdGhlIGRlZmF1bHQgYnJlYWRjcnVtYnMKICAgICRicmVhZGNydW1icyA9ICRicmVhZGNydW1icyA/PyAkZGVmYXVsdEJyZWFkY3J1bWJzOwpAZW5kcGhwCgpAc2VjdGlvbignaGVhZGVyJykKICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCI+CiAgICAgICAgPGgyPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1jYXBpdGFsaXplIj57ISEgJGNydWQtPmdldEhlYWRpbmcoKSA/PyAkY3J1ZC0+ZW50aXR5X25hbWVfcGx1cmFsICEhfTwvc3Bhbj4KICAgICAgICAgICAgPHNtYWxsPnshISAkY3J1ZC0+Z2V0U3ViaGVhZGluZygpID8/IHRyYW5zKCdiYWNrcGFjazo6Y3J1ZC5yZW9yZGVyJykuJyAnLiRjcnVkLT5lbnRpdHlfbmFtZV9wbHVyYWwgISF9Ljwvc21hbGw+CgogICAgICAgICAgICBAaWYgKCRjcnVkLT5oYXNBY2Nlc3MoJ2xpc3QnKSkKICAgICAgICAgICAgICAgIDxzbWFsbD48YSBocmVmPSJ7eyB1cmwoJGNydWQtPnJvdXRlKSB9fSIgY2xhc3M9ImQtcHJpbnQtbm9uZSBmb250LXNtIj48aSBjbGFzcz0ibGEgbGEtYW5nbGUtZG91YmxlLWxlZnQiPjwvaT4ge3sgdHJhbnMoJ2JhY2twYWNrOjpjcnVkLmJhY2tfdG9fYWxsJykgfX0gPHNwYW4+e3sgJGNydWQtPmVudGl0eV9uYW1lX3BsdXJhbCB9fTwvc3Bhbj48L2E+PC9zbWFsbD4KICAgICAgICAgICAgQGVuZGlmCiAgICAgICAgPC9oMj4KICAgIDwvZGl2PgpAZW5kc2VjdGlvbgoKQHNlY3Rpb24oJ2NvbnRlbnQnKQogICAgPD9waHAKICAgIGZ1bmN0aW9uIHRyZWVfZWxlbWVudCgkZW50cnksICRrZXksICRhbGxfZW50cmllcywgJGNydWQpCiAgICB7CiAgICAgICAgaWYgKCEgaXNzZXQoJGVudHJ5LT50cmVlX2VsZW1lbnRfc2hvd24pKSB7CiAgICAgICAgICAgIC8vIG1hcmsgdGhlIGVsZW1lbnQgYXMgc2hvd24KICAgICAgICAgICAgJGFsbF9lbnRyaWVzWyRrZXldLT50cmVlX2VsZW1lbnRfc2hvd24gPSB0cnVlOwogICAgICAgICAgICAkZW50cnktPnRyZWVfZWxlbWVudF9zaG93biA9IHRydWU7CgogICAgICAgICAgICAvLyBzaG93IHRoZSB0cmVlIGVsZW1lbnQKICAgICAgICAgICAgZWNobyAnPGxpIGlkPSJsaXN0XycuJGVudHJ5LT5nZXRLZXkoKS4nIj4nOwogICAgICAgICAgICBlY2hvICc8ZGl2PjxzcGFuIGNsYXNzPSJkaXNjbG9zZSI+PHNwYW4+PC9zcGFuPjwvc3Bhbj4nLm9iamVjdF9nZXQoJGVudHJ5LCAkY3J1ZC0+Z2V0KCdyZW9yZGVyLmxhYmVsJykpLic8L2Rpdj4nOwoKICAgICAgICAgICAgLy8gc2VlIGlmIHRoaXMgZWxlbWVudCBoYXMgYW55IGNoaWxkcmVuCiAgICAgICAgICAgICRjaGlsZHJlbiA9IFtdOwogICAgICAgICAgICBmb3JlYWNoICgkYWxsX2VudHJpZXMgYXMgJGtleSA9PiAkc3ViZW50cnkpIHsKICAgICAgICAgICAgICAgIGlmICgkc3ViZW50cnktPnBhcmVudF9pZCA9PSAkZW50cnktPmdldEtleSgpKSB7CiAgICAgICAgICAgICAgICAgICAgJGNoaWxkcmVuW10gPSAkc3ViZW50cnk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRjaGlsZHJlbiA9IGNvbGxlY3QoJGNoaWxkcmVuKS0+c29ydEJ5KCdsZnQnKTsKCiAgICAgICAgICAgIC8vIGlmIGl0IGRvZXMgaGF2ZSBjaGlsZHJlbiwgc2hvdyB0aGVtCiAgICAgICAgICAgIGlmIChjb3VudCgkY2hpbGRyZW4pKSB7CiAgICAgICAgICAgICAgICBlY2hvICc8b2w+JzsKICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRjaGlsZHJlbiBhcyAka2V5ID0+ICRjaGlsZCkgewogICAgICAgICAgICAgICAgICAgICRjaGlsZHJlblska2V5XSA9IHRyZWVfZWxlbWVudCgkY2hpbGQsICRjaGlsZC0+Z2V0S2V5KCksICRhbGxfZW50cmllcywgJGNydWQpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWNobyAnPC9vbD4nOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVjaG8gJzwvbGk+JzsKICAgICAgICB9CgogICAgICAgIHJldHVybiAkZW50cnk7CiAgICB9CgogICAgPz4KCiAgICA8ZGl2IGNsYXNzPSJyb3cgbXQtNCI+CiAgICAgICAgPGRpdiBjbGFzcz0ie3sgJGNydWQtPmdldFJlb3JkZXJDb250ZW50Q2xhc3MoKSB9fSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgcC00Ij4KICAgICAgICAgICAgICAgIDxwPnt7IHRyYW5zKCdiYWNrcGFjazo6Y3J1ZC5yZW9yZGVyX3RleHQnKSB9fTwvcD4KCiAgICAgICAgICAgICAgICA8b2wgY2xhc3M9InNvcnRhYmxlIG10LTAiPgogICAgICAgICAgICAgICAgICAgIDw/cGhwCiAgICAgICAgICAgICAgICAgICAgJGFsbF9lbnRyaWVzID0gY29sbGVjdCgkZW50cmllcy0+YWxsKCkpLT5zb3J0QnkoJ2xmdCcpLT5rZXlCeSgkY3J1ZC0+Z2V0TW9kZWwoKS0+Z2V0S2V5TmFtZSgpKTsKICAgICAgICAgICAgICAgICAgICAkcm9vdF9lbnRyaWVzID0gJGFsbF9lbnRyaWVzLT5maWx0ZXIoZnVuY3Rpb24gKCRpdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAkaXRlbS0+cGFyZW50X2lkID09IDA7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHJvb3RfZW50cmllcyBhcyAka2V5ID0+ICRlbnRyeSkgewogICAgICAgICAgICAgICAgICAgICAgICAkcm9vdF9lbnRyaWVzWyRrZXldID0gdHJlZV9lbGVtZW50KCRlbnRyeSwgJGtleSwgJGFsbF9lbnRyaWVzLCAkY3J1ZCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgID8+CiAgICAgICAgICAgICAgICA8L29sPgoKICAgICAgICAgICAgPC9kaXY+e3stLSAvLmNhcmQgLS19fQoKICAgICAgICAgICAgPGJ1dHRvbiBpZD0idG9BcnJheSIgY2xhc3M9ImJ0biBidG4tc3VjY2VzcyIgZGF0YS1zdHlsZT0iem9vbS1pbiI+PGkgY2xhc3M9ImxhIGxhLXNhdmUiPjwvaT4ge3sgdHJhbnMoJ2JhY2twYWNrOjpjcnVkLnNhdmUnKSB9fTwvYnV0dG9uPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CkBlbmRzZWN0aW9uCgoKQHNlY3Rpb24oJ2FmdGVyX3N0eWxlcycpCiAgICA8c3R5bGU+CiAgICAgICAgLnVpLXNvcnRhYmxlIC5wbGFjZWhvbGRlciB7CiAgICAgICAgICAgIG91dGxpbmU6IDFweCBkYXNoZWQgIzQxODNDNDsKICAgICAgICAgICAgLyotd2Via2l0LWJvcmRlci1yYWRpdXM6IDNweDsKICAgICAgICAgICAgLW1vei1ib3JkZXItcmFkaXVzOiAzcHg7CiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDsKICAgICAgICAgICAgbWFyZ2luOiAtMXB4OyovCiAgICAgICAgfQoKICAgICAgICAudWktc29ydGFibGUgLm1qcy1uZXN0ZWRTb3J0YWJsZS1lcnJvciB7CiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmYmUzZTQ7CiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgICAgICAgfQoKICAgICAgICAudWktc29ydGFibGUgb2wgewogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMzBweDsKICAgICAgICB9CgogICAgICAgIG9sLnNvcnRhYmxlLCBvbC5zb3J0YWJsZSBvbCB7CiAgICAgICAgICAgIG1hcmdpbjogMCAwIDAgMjVweDsKICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lOwogICAgICAgIH0KCiAgICAgICAgb2wuc29ydGFibGUgewogICAgICAgICAgICBtYXJnaW46IDJlbSAwOwogICAgICAgIH0KCiAgICAgICAgLnNvcnRhYmxlIGxpIHsKICAgICAgICAgICAgbWFyZ2luOiA1cHggMCAwIDA7CiAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgfQoKICAgICAgICAuc29ydGFibGUgbGkgZGl2ICB7CiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CiAgICAgICAgICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogM3B4OwogICAgICAgICAgICAtbW96LWJvcmRlci1yYWRpdXM6IDNweDsKICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4OwogICAgICAgICAgICBwYWRkaW5nOiA2cHg7CiAgICAgICAgICAgIG1hcmdpbjogMDsKICAgICAgICAgICAgY3Vyc29yOiBtb3ZlOwogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0OwogICAgICAgICAgICBjb2xvcjogIzQ0NDsKICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjMDBhY2Q2OwogICAgICAgIH0KCiAgICAgICAgLnNvcnRhYmxlIGxpLm1qcy1uZXN0ZWRTb3J0YWJsZS1icmFuY2ggZGl2IHsKICAgICAgICAgICAgLypiYWNrZ3JvdW5kLWNvbG9yOiAjMDBjMGVmOyovCiAgICAgICAgICAgIC8qYm9yZGVyLWNvbG9yOiAjMDBhY2Q2OyovCiAgICAgICAgfQoKICAgICAgICAuc29ydGFibGUgbGkubWpzLW5lc3RlZFNvcnRhYmxlLWxlYWYgZGl2IHsKICAgICAgICAgICAgLypiYWNrZ3JvdW5kLWNvbG9yOiAjMDBjMGVmOyovCiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CiAgICAgICAgfQoKICAgICAgICBsaS5tanMtbmVzdGVkU29ydGFibGUtY29sbGFwc2VkLm1qcy1uZXN0ZWRTb3J0YWJsZS1ob3ZlcmluZyBkaXYgewogICAgICAgICAgICBib3JkZXItY29sb3I6ICM5OTk7CiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmYWZhZmE7CiAgICAgICAgfQoKICAgICAgICAudWktc29ydGFibGUgLmRpc2Nsb3NlIHsKICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICAgICAgICB3aWR0aDogMTBweDsKICAgICAgICAgICAgZGlzcGxheTogbm9uZTsKICAgICAgICB9CgogICAgICAgIC5zb3J0YWJsZSBsaS5tanMtbmVzdGVkU29ydGFibGUtY29sbGFwc2VkID4gb2wgewogICAgICAgICAgICBkaXNwbGF5OiBub25lOwogICAgICAgIH0KCiAgICAgICAgLnNvcnRhYmxlIGxpLm1qcy1uZXN0ZWRTb3J0YWJsZS1icmFuY2ggPiBkaXYgPiAuZGlzY2xvc2UgewogICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgICAgfQoKICAgICAgICAuc29ydGFibGUgbGkubWpzLW5lc3RlZFNvcnRhYmxlLWNvbGxhcHNlZCA+IGRpdiA+IC5kaXNjbG9zZSA+IHNwYW46YmVmb3JlIHsKICAgICAgICAgICAgY29udGVudDogJysgJzsKICAgICAgICB9CgogICAgICAgIC5zb3J0YWJsZSBsaS5tanMtbmVzdGVkU29ydGFibGUtZXhwYW5kZWQgPiBkaXYgPiAuZGlzY2xvc2UgPiBzcGFuOmJlZm9yZSB7CiAgICAgICAgICAgIGNvbnRlbnQ6ICctICc7CiAgICAgICAgfQoKICAgICAgICAudWktc29ydGFibGUgaDEgewogICAgICAgICAgICBmb250LXNpemU6IDJlbTsKICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDsKICAgICAgICB9CgogICAgICAgIC51aS1zb3J0YWJsZSBoMiB7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4yZW07CiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7CiAgICAgICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYzsKICAgICAgICAgICAgbWFyZ2luLXRvcDogLjJlbTsKICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMS41ZW07CiAgICAgICAgfQoKICAgICAgICAudWktc29ydGFibGUgaDMgewogICAgICAgICAgICBmb250LXNpemU6IDFlbTsKICAgICAgICAgICAgbWFyZ2luOiAxZW0gMCAuM2VtOzsKICAgICAgICB9CgogICAgICAgIC51aS1zb3J0YWJsZSBwLCAudWktc29ydGFibGUgb2wsIC51aS1zb3J0YWJsZSB1bCwgLnVpLXNvcnRhYmxlIHByZSwgLnVpLXNvcnRhYmxlIGZvcm0gewogICAgICAgICAgICBtYXJnaW4tdG9wOiAwOwogICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07CiAgICAgICAgfQoKICAgICAgICAudWktc29ydGFibGUgZGwgewogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgfQoKICAgICAgICAudWktc29ydGFibGUgZGQgewogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgICAgIHBhZGRpbmc6IDAgMCAwIDEuNWVtOwogICAgICAgIH0KCiAgICAgICAgLnVpLXNvcnRhYmxlIGNvZGUgewogICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZTVlNWU1OwogICAgICAgIH0KCiAgICAgICAgLnVpLXNvcnRhYmxlIGlucHV0IHsKICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tOwogICAgICAgIH0KCiAgICAgICAgLnVpLXNvcnRhYmxlIC5ub3RpY2UgewogICAgICAgICAgICBjb2xvcjogI2MzMzsKICAgICAgICB9CiAgICA8L3N0eWxlPgpAZW5kc2VjdGlvbgoKQHNlY3Rpb24oJ2FmdGVyX3NjcmlwdHMnKQogICAgPHNjcmlwdCBzcmM9Int7IGFzc2V0KCdwYWNrYWdlcy9qcXVlcnktdWktZGlzdC9qcXVlcnktdWkubWluLmpzJykgfX0iIHR5cGU9InRleHQvamF2YXNjcmlwdCIgPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Int7IGFzc2V0KCdwYWNrYWdlcy9uZXN0ZWRTb3J0YWJsZS9qcXVlcnkubWpzLm5lc3RlZFNvcnRhYmxlMi5qcycpIH19IiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiID48L3NjcmlwdD4KCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgalF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigkKSB7CiAgICAgICAgICAgIHZhciBpc1J0bCA9IEJvb2xlYW4oInt7IChjb25maWcoJ2JhY2twYWNrLmJhc2UuaHRtbF9kaXJlY3Rpb24nKSA9PT0gJ3J0bCcpID8gdHJ1ZSA6IGZhbHNlIH19Iik7CiAgICAgICAgICAgIGlmKGlzUnRsKSB7CiAgICAgICAgICAgICAgICAkKCAiIDxzdHlsZT4gLnVpLXNvcnRhYmxlIG9sIHttYXJnaW46IDA7cGFkZGluZzogMDtwYWRkaW5nLXJpZ2h0OiAzMHB4O31vbC5zb3J0YWJsZSwgb2wuc29ydGFibGUgb2wge21hcmdpbjogMCAyNXB4IDAgMDtwYWRkaW5nOiAwO2xpc3Qtc3R5bGUtdHlwZTogbm9uZTt9LnVpLXNvcnRhYmxlIGRkIHttYXJnaW46IDA7cGFkZGluZzogMCAxLjVlbSAwIDA7fTwvc3R5bGU+IiApLmFwcGVuZFRvKCAiaGVhZCIgKQogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIGluaXRpYWxpemUgdGhlIG5lc3RlZCBzb3J0YWJsZSBwbHVnaW4KICAgICAgICAgICAgJCgnLnNvcnRhYmxlJykubmVzdGVkU29ydGFibGUoewogICAgICAgICAgICAgICAgZm9yY2VQbGFjZWhvbGRlclNpemU6IHRydWUsCiAgICAgICAgICAgICAgICBoYW5kbGU6ICdkaXYnLAogICAgICAgICAgICAgICAgaGVscGVyOiAnY2xvbmUnLAogICAgICAgICAgICAgICAgaXRlbXM6ICdsaScsCiAgICAgICAgICAgICAgICBvcGFjaXR5OiAuNiwKICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAncGxhY2Vob2xkZXInLAogICAgICAgICAgICAgICAgcmV2ZXJ0OiAyNTAsCiAgICAgICAgICAgICAgICB0YWJTaXplOiAyNSwKICAgICAgICAgICAgICAgIHJ0bDogaXNSdGwsCiAgICAgICAgICAgICAgICB0b2xlcmFuY2U6ICdwb2ludGVyJywKICAgICAgICAgICAgICAgIHRvbGVyYW5jZUVsZW1lbnQ6ICc+IGRpdicsCiAgICAgICAgICAgICAgICBtYXhMZXZlbHM6IHt7ICRjcnVkLT5nZXQoJ3Jlb3JkZXIubWF4X2xldmVsJykgPz8gMyB9fSwKICAgICAgICAgICAgICAgIGlzVHJlZTogdHJ1ZSwKICAgICAgICAgICAgICAgIGV4cGFuZE9uSG92ZXI6IDcwMCwKICAgICAgICAgICAgICAgIHN0YXJ0Q29sbGFwc2VkOiBmYWxzZQogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICQoJy5kaXNjbG9zZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgJCh0aGlzKS5jbG9zZXN0KCdsaScpLnRvZ2dsZUNsYXNzKCdtanMtbmVzdGVkU29ydGFibGUtY29sbGFwc2VkJykudG9nZ2xlQ2xhc3MoJ21qcy1uZXN0ZWRTb3J0YWJsZS1leHBhbmRlZCcpOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICQoJyN0b0FycmF5JykuY2xpY2soZnVuY3Rpb24oZSl7CiAgICAgICAgICAgICAgICAvLyBnZXQgdGhlIGN1cnJlbnQgdHJlZSBvcmRlcgogICAgICAgICAgICAgICAgYXJyYWllZCA9ICQoJ29sLnNvcnRhYmxlJykubmVzdGVkU29ydGFibGUoJ3RvQXJyYXknLCB7c3RhcnREZXB0aENvdW50OiAwfSk7CgogICAgICAgICAgICAgICAgLy8gbG9nIGl0CiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGFycmFpZWQpOwoKICAgICAgICAgICAgICAgIC8vIHNlbmQgaXQgd2l0aCBQT1NUCiAgICAgICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgICAgIHVybDogJ3t7IHVybChSZXF1ZXN0OjpwYXRoKCkpIH19JywKICAgICAgICAgICAgICAgICAgICB0eXBlOiAnUE9TVCcsCiAgICAgICAgICAgICAgICAgICAgZGF0YTogeyB0cmVlOiBKU09OLnN0cmluZ2lmeShhcnJhaWVkKSB9LAogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAuZG9uZShmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAgICAgbmV3IE5vdHkoewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogIjxzdHJvbmc+e3sgdHJhbnMoJ2JhY2twYWNrOjpjcnVkLnJlb3JkZXJfc3VjY2Vzc190aXRsZScpIH19PC9zdHJvbmc+PGJyPnt7IHRyYW5zKCdiYWNrcGFjazo6Y3J1ZC5yZW9yZGVyX3N1Y2Nlc3NfbWVzc2FnZScpIH19IgogICAgICAgICAgICAgICAgICAgICAgICB9KS5zaG93KCk7CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAuZmFpbChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAgICAgbmV3IE5vdHkoewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICI8c3Ryb25nPnt7IHRyYW5zKCdiYWNrcGFjazo6Y3J1ZC5yZW9yZGVyX2Vycm9yX3RpdGxlJykgfX08L3N0cm9uZz48YnI+e3sgdHJhbnMoJ2JhY2twYWNrOjpjcnVkLnJlb3JkZXJfZXJyb3JfbWVzc2FnZScpIH19IgogICAgICAgICAgICAgICAgICAgICAgICB9KS5zaG93KCk7CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAuYWx3YXlzKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiY29tcGxldGUiKTsKICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgJC5hamF4UHJlZmlsdGVyKGZ1bmN0aW9uKG9wdGlvbnMsIG9yaWdpbmFsT3B0aW9ucywgeGhyKSB7CiAgICAgICAgICAgICAgICB2YXIgdG9rZW4gPSAkKCdtZXRhW25hbWU9ImNzcmZfdG9rZW4iXScpLmF0dHIoJ2NvbnRlbnQnKTsKCiAgICAgICAgICAgICAgICBpZiAodG9rZW4pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4geGhyLnNldFJlcXVlc3RIZWFkZXIoJ1gtWFNSRi1UT0tFTicsIHRva2VuKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CgogICAgICAgIH0pOwogICAgPC9zY3JpcHQ+CkBlbmRzZWN0aW9uCiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YToxOntzOjE1OiJcdHJlZV9lbGVtZW50KCkiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fIjo4OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxNToiXHRyZWVfZWxlbWVudCgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTI6InRyZWVfZWxlbWVudCI7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBhcmd1bWVudHMiO2E6NDp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NToiZW50cnkiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czozOiJrZXkiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czoxMToiYWxsX2VudHJpZXMiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjM7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo0OiJjcnVkIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBkb2NCbG9jayI7TjtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjI5O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZ1bmN0aW9uXwBlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NjI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRnVuY3Rpb25fAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjYwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGdW5jdGlvbl8AbWV0YWRhdGEiO2E6MDp7fX19czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";