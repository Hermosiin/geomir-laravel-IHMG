1711241706
waR3U4bTeM%3Aa52130fa3ffa531d232be25fec0f7b32-26da26ec502f45d1db94f9d775e56311
s:6000:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjI2ZGEyNmVjNTAyZjQ1ZDFkYjk0ZjlkNzc1ZTU2MzExIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTU6InJhZGlvLmJsYWRlLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjY4OiJ2ZW5kb3IvYmFja3BhY2svY3J1ZC9zcmMvcmVzb3VyY2VzL3ZpZXdzL2NydWQvZmllbGRzL3JhZGlvLmJsYWRlLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MzU0Nzoie3stLSByYWRpbyAtLX19CkBwaHAKICAgICRvcHRpb25WYWx1ZSA9IG9sZF9lbXB0eV9vcl9udWxsKCRmaWVsZFsnbmFtZSddLCAnJykgPz8gICRmaWVsZFsndmFsdWUnXSA/PyAkZmllbGRbJ2RlZmF1bHQnXSA/PyAnJzsKCiAgICAvLyBjaGVjayBpZiBhdHRyaWJ1dGUgaXMgY2FzdGVkLCBpZiBpdCBpcywgd2UgZ2V0IGJhY2sgdW4tY2FzdGVkIHZhbHVlcwogICAgaWYoQXJyOjpnZXQoJGNydWQtPm1vZGVsLT5nZXRDYXN0cygpLCAkZmllbGRbJ25hbWUnXSkgPT09ICdib29sZWFuJykgewogICAgICAgICRvcHRpb25WYWx1ZSA9IChpbnQpICRvcHRpb25WYWx1ZTsKICAgIH0KCiAgICAvLyBpZiB0aGUgY2xhc3MgaXNuJ3Qgb3ZlcndyaXR0ZW4sIHVzZSAncmFkaW8nCiAgICBpZiAoIWlzc2V0KCRmaWVsZFsnYXR0cmlidXRlcyddWydjbGFzcyddKSkgewogICAgICAgICRmaWVsZFsnYXR0cmlidXRlcyddWydjbGFzcyddID0gJ3JhZGlvJzsKICAgIH0KCiAgICAkZmllbGRbJ3dyYXBwZXInXSA9ICRmaWVsZFsnd3JhcHBlciddID8/ICRmaWVsZFsnd3JhcHBlckF0dHJpYnV0ZXMnXSA/PyBbXTsKICAgICRmaWVsZFsnd3JhcHBlciddWydkYXRhLWluaXQtZnVuY3Rpb24nXSA9ICRmaWVsZFsnd3JhcHBlciddWydkYXRhLWluaXQtZnVuY3Rpb24nXSA/PyAnYnBGaWVsZEluaXRSYWRpb0VsZW1lbnQnOwpAZW5kcGhwCgpAaW5jbHVkZSgnY3J1ZDo6ZmllbGRzLmluYy53cmFwcGVyX3N0YXJ0JykKCgogICAgICAgIDxsYWJlbCBjbGFzcz0iZC1ibG9jayI+eyEhICRmaWVsZFsnbGFiZWwnXSAhIX08L2xhYmVsPgogICAgICAgIEBpbmNsdWRlKCdjcnVkOjpmaWVsZHMuaW5jLnRyYW5zbGF0YWJsZV9pY29uJykKCgogICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgdmFsdWU9Int7ICRvcHRpb25WYWx1ZSB9fSIgbmFtZT0ie3skZmllbGRbJ25hbWUnXX19IiAvPgoKICAgIEBpZiggaXNzZXQoJGZpZWxkWydvcHRpb25zJ10pICYmICRmaWVsZFsnb3B0aW9ucyddID0gKGFycmF5KSRmaWVsZFsnb3B0aW9ucyddICkKCiAgICAgICAgQGZvcmVhY2ggKCRmaWVsZFsnb3B0aW9ucyddIGFzICR2YWx1ZSA9PiAkbGFiZWwgKQoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1jaGVjayB7eyBpc3NldCgkZmllbGRbJ2lubGluZSddKSAmJiAkZmllbGRbJ2lubGluZSddID8gJ2Zvcm0tY2hlY2staW5saW5lJyA6ICcnIH19Ij4KICAgICAgICAgICAgICAgIDxpbnB1dCAgdHlwZT0icmFkaW8iCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNoZWNrLWlucHV0IgogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT0ie3skdmFsdWV9fSIKICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUoJ2NydWQ6OmZpZWxkcy5pbmMuYXR0cmlidXRlcycpCiAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ie3sgaXNzZXQoJGZpZWxkWydpbmxpbmUnXSkgJiYgJGZpZWxkWydpbmxpbmUnXSA/ICdyYWRpby1pbmxpbmUnIDogJycgfX0gZm9ybS1jaGVjay1sYWJlbCBmb250LXdlaWdodC1ub3JtYWwiPnshISAkbGFiZWwgISF9PC9sYWJlbD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIEBlbmRmb3JlYWNoCgogICAgQGVuZGlmCgogICAge3stLSBISU5UIC0tfX0KICAgIEBpZiAoaXNzZXQoJGZpZWxkWydoaW50J10pKQogICAgICAgIDxwIGNsYXNzPSJoZWxwLWJsb2NrIj57ISEgJGZpZWxkWydoaW50J10gISF9PC9wPgogICAgQGVuZGlmCgpAaW5jbHVkZSgnY3J1ZDo6ZmllbGRzLmluYy53cmFwcGVyX2VuZCcpCgogICAge3stLSBGSUVMRCBKUyAtIHdpbGwgYmUgbG9hZGVkIGluIHRoZSBhZnRlcl9zY3JpcHRzIHNlY3Rpb24gLS19fQogICAgQHB1c2goJ2NydWRfZmllbGRzX3NjcmlwdHMnKQogICAgQGxvYWRPbmNlKCdicEZpZWxkSW5pdFJhZGlvRWxlbWVudCcpCiAgICA8c2NyaXB0PgogICAgICAgIGZ1bmN0aW9uIGJwRmllbGRJbml0UmFkaW9FbGVtZW50KGVsZW1lbnQpIHsKICAgICAgICAgICAgdmFyIGhpZGRlbklucHV0ID0gZWxlbWVudC5maW5kKCdpbnB1dFt0eXBlPWhpZGRlbl0nKTsKICAgICAgICAgICAgdmFyIHZhbHVlID0gaGlkZGVuSW5wdXQudmFsKCk7CiAgICAgICAgICAgIHZhciBpZCA9ICdyYWRpb18nK01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDAwMDApOwoKICAgICAgICAgICAgLy8gc2V0IHVuaXF1ZSBJRHMgc28gdGhhdCBsYWJlbHMgYXJlIGNvcnJlbGF0ZWQgd2l0aCBpbnB1dHMKICAgICAgICAgICAgZWxlbWVudC5maW5kKCcuZm9ybS1jaGVjayBpbnB1dFt0eXBlPXJhZGlvXScpLmVhY2goZnVuY3Rpb24oaW5kZXgsIGl0ZW0pIHsKICAgICAgICAgICAgICAgICQodGhpcykuYXR0cignaWQnLCBpZCtpbmRleCk7CiAgICAgICAgICAgICAgICAkKHRoaXMpLnNpYmxpbmdzKCdsYWJlbCcpLmF0dHIoJ2ZvcicsIGlkK2luZGV4KTsKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBoaWRkZW5JbnB1dC5vbignQ3J1ZEZpZWxkOmRpc2FibGUnLCBmdW5jdGlvbihlKSB7CiAgICAgICAgICAgICAgICBlbGVtZW50LmZpbmQoJy5mb3JtLWNoZWNrIGlucHV0W3R5cGU9cmFkaW9dJykuZWFjaChmdW5jdGlvbihpbmRleCwgaXRlbSkgewogICAgICAgICAgICAgICAgICAgICQodGhpcykucHJvcCgnZGlzYWJsZWQnLCB0cnVlKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGhpZGRlbklucHV0Lm9uKCdDcnVkRmllbGQ6ZW5hYmxlJywgZnVuY3Rpb24oZSkgewogICAgICAgICAgICAgICAgZWxlbWVudC5maW5kKCcuZm9ybS1jaGVjayBpbnB1dFt0eXBlPXJhZGlvXScpLmVhY2goZnVuY3Rpb24oaW5kZXgsIGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnJlbW92ZUF0dHIoJ2Rpc2FibGVkJyk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAvLyB3aGVuIG9uZSByYWRpbyBpbnB1dCBpcyBzZWxlY3RlZAogICAgICAgICAgICBlbGVtZW50LmZpbmQoJ2lucHV0W3R5cGU9cmFkaW9dJykuY2hhbmdlKGZ1bmN0aW9uKGV2ZW50KSB7CiAgICAgICAgICAgICAgICAvLyB0aGUgdmFsdWUgZ2V0cyB1cGRhdGVkIGluIHRoZSBoaWRkZW4gaW5wdXQgYW5kIHRoZSAnY2hhbmdlJyBldmVudCBpcyBmaXJlZAogICAgICAgICAgICAgICAgaGlkZGVuSW5wdXQudmFsKCQodGhpcykudmFsKCkpLmNoYW5nZSgpOwogICAgICAgICAgICAgICAgLy8gYWxsIG90aGVyIHJhZGlvcyBnZXQgdW5jaGVja2VkCiAgICAgICAgICAgICAgICBlbGVtZW50LmZpbmQoJ2lucHV0W3R5cGU9cmFkaW9dJykubm90KHRoaXMpLnByb3AoJ2NoZWNrZWQnLCBmYWxzZSk7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgLy8gc2VsZWN0IHRoZSByaWdodCByYWRpb3MKICAgICAgICAgICAgZWxlbWVudC5maW5kKCdpbnB1dFt0eXBlPXJhZGlvXVt2YWx1ZT0iJyt2YWx1ZSsnIl0nKS5wcm9wKCdjaGVja2VkJywgdHJ1ZSk7CiAgICAgICAgfQogICAgPC9zY3JpcHQ+CiAgICBAZW5kTG9hZE9uY2UKICAgIEBlbmRwdXNoCiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";