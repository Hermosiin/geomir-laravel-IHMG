1711241705
waR3U4bTeM%3A1a13563edd6e7776ac89ece1a6b9c88b-ad188643513960bf7529d5bba16d8752
s:9096:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImFkMTg4NjQzNTEzOTYwYmY3NTI5ZDViYmExNmQ4NzUyIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6ODoiY3J1ZC5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo1MToidmVuZG9yL2JhY2twYWNrL2NydWQvc3JjL3Jlc291cmNlcy9sYW5nL2RlL2NydWQucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo1ODk2OiI8P3BocAoKcmV0dXJuIFsKCiAgICAvKgogICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICB8IEJhY2twYWNrIENydWQgTGFuZ3VhZ2UgTGluZXMKICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgfAogICAgfCBUaGUgZm9sbG93aW5nIGxhbmd1YWdlIGxpbmVzIGFyZSB1c2VkIGJ5IHRoZSBDUlVEIGludGVyZmFjZS4KICAgIHwgWW91IGFyZSBmcmVlIHRvIGNoYW5nZSB0aGVtIHRvIGFueXRoaW5nCiAgICB8IHlvdSB3YW50IHRvIGN1c3RvbWl6ZSB5b3VyIHZpZXdzIHRvIGJldHRlciBtYXRjaCB5b3VyIGFwcGxpY2F0aW9uLgogICAgfAogICAgKi8KCiAgICAvLyBGb3JtcwogICAgJ3NhdmVfYWN0aW9uX3NhdmVfYW5kX25ldycgICAgICAgICA9PiAnU3BlaWNoZXJuIHVuZCBuZXUnLAogICAgJ3NhdmVfYWN0aW9uX3NhdmVfYW5kX2VkaXQnICAgICAgICA9PiAnU3BlaWNoZXJuIHVuZCBiZWFyYmVpdGVuJywKICAgICdzYXZlX2FjdGlvbl9zYXZlX2FuZF9iYWNrJyAgICAgICAgPT4gJ1NwZWljaGVybiB1bmQgenVyw7xjaycsCiAgICAnc2F2ZV9hY3Rpb25fc2F2ZV9hbmRfcHJldmlldycgICAgID0+ICdTcGVpY2hlcm4gJiBWb3JzY2hhdScsCiAgICAnc2F2ZV9hY3Rpb25fY2hhbmdlZF9ub3RpZmljYXRpb24nID0+ICdTdGFuZGFyZHZlcmhhbHRlbiBuYWNoIGRlbSBTcGVpY2hlcm4gd3VyZGUgZ2XDpG5kZXJ0LicsCgogICAgLy8gQ3JlYXRlIGZvcm0KICAgICdhZGQnICAgICAgICAgICAgICAgICA9PiAnQW5sZWdlbjogJywKICAgICdiYWNrX3RvX2FsbCcgICAgICAgICA9PiAnWnVyw7xjayB6dXIgw5xiZXJzaWNodCAnLAogICAgJ2NhbmNlbCcgICAgICAgICAgICAgID0+ICdBYmJyZWNoZW4nLAogICAgJ2FkZF9hX25ldycgICAgICAgICAgID0+ICdOZXUgYW5sZWdlbjogJywKCiAgICAvLyBFZGl0IGZvcm0KICAgICdlZGl0JyAgICAgICAgICAgICAgICAgPT4gJ0JlYXJiZWl0ZW4nLAogICAgJ3NhdmUnICAgICAgICAgICAgICAgICA9PiAnU3BlaWNoZXJuJywKCiAgICAvLyBUcmFuc2xhdGFibGUgbW9kZWxzCiAgICAnZWRpdF90cmFuc2xhdGlvbnMnICAgID0+ICfDnEJFUlNFVFpVTkcgQkVBUkJFSVRFTicsCiAgICAnbGFuZ3VhZ2UnICAgICAgICAgICAgID0+ICdTcHJhY2hlJywKCiAgICAvLyBDUlVEIHRhYmxlIHZpZXcKICAgICdhbGwnICAgICAgICAgICAgICAgICAgICAgICA9PiAnQWxsZSAnLAogICAgJ2luX3RoZV9kYXRhYmFzZScgICAgICAgICAgID0+ICdpbiBkZXIgRGF0ZW5iYW5rJywKICAgICdsaXN0JyAgICAgICAgICAgICAgICAgICAgICA9PiAnTGlzdGUnLAogICAgJ3Jlc2V0JyAgICAgICAgICAgICAgICAgICAgID0+ICdadXLDvGNrc2V0emVuJywKICAgICdhY3Rpb25zJyAgICAgICAgICAgICAgICAgICA9PiAnQWt0aW9uZW4nLAogICAgJ3ByZXZpZXcnICAgICAgICAgICAgICAgICAgID0+ICdWb3JzY2hhdScsCiAgICAnZGVsZXRlJyAgICAgICAgICAgICAgICAgICAgPT4gJ0zDtnNjaGVuJywKICAgICdhZG1pbicgICAgICAgICAgICAgICAgICAgICA9PiAnQWRtaW4nLAogICAgJ2RldGFpbHNfcm93JyAgICAgICAgICAgICAgID0+ICdEaWVzZSBaZWlsZSB6ZWlndCBkaWUgRGV0YWlscyB1bmQga2FubiBuYWNoIEJlbGllYmVuIGdlw6RuZGVydCB3ZXJkZW4uJywKICAgICdkZXRhaWxzX3Jvd19sb2FkaW5nX2Vycm9yJyA9PiAnQmVpbSBMYWRlbiBkZXIgRGV0YWlscyBpc3QgZWluIEZlaGxlciBhdWZnZXRyZXRlbi4gQml0dGUgdmVyc3VjaGUgZXMgbm9jaCBlaW5tYWwuJywKICAgICdjbG9uZScgICAgICAgICAgICAgICAgICAgICA9PiAnRHVwbGl6aWVyZW4nLAogICAgJ2Nsb25lX3N1Y2Nlc3MnICAgICAgICAgICAgID0+ICc8c3Ryb25nPkVpbnRyYWcgZHVwbGl6aWVydDwvc3Ryb25nPjxicj5FaW4gbmV1ZXIgRWludHJhZyB3dXJkZSBtaXQgZGVuIHNlbGJlbiBJbmZvcm1hdGlvbmVuIGVyc3RlbGx0LicsCiAgICAnY2xvbmVfZmFpbHVyZScgICAgICAgICAgICAgPT4gJzxzdHJvbmc+RHVwbGl6aWVyZW4gZmVobGdlc2NobGFnZW48L3N0cm9uZz48YnI+RGVyIG5ldWUgRWludHJhZyBrb25udGUgbmljaHQgZXJzdGVsbHQgd2VyZGVuLiBCaXR0ZSB2ZXJzdWNoZSBlcyBlcm5ldXQuJywKCiAgICAvLyBDb25maXJtYXRpb24gbWVzc2FnZXMgYW5kIGJ1YmJsZXMKICAgICdkZWxldGVfY29uZmlybScgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9PiAnU29sbCBkaWVzZXIgRWludHJhZyB3aXJrbGljaCBnZWzDtnNjaHQgd2VyZGVuPycsCiAgICAnZGVsZXRlX2NvbmZpcm1hdGlvbl90aXRsZScgICAgICAgICAgICAgICAgICAgPT4gJ0VpbnRyYWcgZ2Vsw7ZzY2h0JywKICAgICdkZWxldGVfY29uZmlybWF0aW9uX21lc3NhZ2UnICAgICAgICAgICAgICAgICA9PiAnRGVyIEVpbnRyYWcgd3VyZGUgZXJmb2xncmVpY2ggZ2Vsw7ZzY2h0LicsCiAgICAnZGVsZXRlX2NvbmZpcm1hdGlvbl9ub3RfdGl0bGUnICAgICAgICAgICAgICAgPT4gJ05JQ0hUIGdlbMO2c2NodCcsCiAgICAnZGVsZXRlX2NvbmZpcm1hdGlvbl9ub3RfbWVzc2FnZScgICAgICAgICAgICAgPT4gJ0VpbiBGZWhsZXIgaXN0IGF1ZmdldHJldGVuLiBEZXIgRWludHJhZyB3dXJkZSBtw7ZnbGljaGVyd2Vpc2UgbmljaHQgZ2Vsw7ZzY2h0LicsCiAgICAnZGVsZXRlX2NvbmZpcm1hdGlvbl9ub3RfZGVsZXRlZF90aXRsZScgICAgICAgPT4gJ05pY2h0IGdlbMO2c2NodCcsCiAgICAnZGVsZXRlX2NvbmZpcm1hdGlvbl9ub3RfZGVsZXRlZF9tZXNzYWdlJyAgICAgPT4gJ05pY2h0cyBwYXNzaWVydC4gRGVyIEVpbnRyYWcgd3VyZGUgbmljaHQgZ2Vsw7ZzY2h0LicsCgogICAgLy8gRGF0YVRhYmxlcyB0cmFuc2xhdGlvbgogICAgJ2VtcHR5VGFibGUnICAgICA9PiAnS2VpbmUgRWludHLDpGdlIHZvcmhhbmRlbicsCiAgICAnaW5mbycgICAgICAgICAgID0+ICdaZWlndCBfU1RBUlRfIGJpcyBfRU5EXyB2b24gX1RPVEFMXyBFaW50csOkZ2VuJywKICAgICdpbmZvRW1wdHknICAgICAgPT4gJycsCiAgICAnaW5mb0ZpbHRlcmVkJyAgID0+ICcoZ2VmaWx0ZXJ0IHZvbiBpbnNnZXNhbXQgX01BWF8gRWludHLDpGdlbiknLAogICAgJ2luZm9Qb3N0Rml4JyAgICA9PiAnLicsCiAgICAndGhvdXNhbmRzJyAgICAgID0+ICcuJywKICAgICdsZW5ndGhNZW51JyAgICAgPT4gJ19NRU5VXyBFaW50csOkZ2UgcHJvIFNlaXRlJywKICAgICdsb2FkaW5nUmVjb3JkcycgPT4gJ0xhZGVuLi4uJywKICAgICdwcm9jZXNzaW5nJyAgICAgPT4gJ1ZlcmFyYmVpdGVuLi4uJywKICAgICdzZWFyY2gnICAgICAgICAgPT4gJ1N1Y2hlbicsCiAgICAnemVyb1JlY29yZHMnICAgID0+ICdLZWluZSBwYXNzZW5kZW4gRWludHLDpGdlIGdlZnVuZGVuJywKICAgICdwYWdpbmF0ZScgICAgICAgPT4gWwogICAgICAgICdmaXJzdCcgICAgPT4gJ0Vyc3RlJywKICAgICAgICAnbGFzdCcgICAgID0+ICdMZXR6dGUnLAogICAgICAgICduZXh0JyAgICAgPT4gJ07DpGNoc3RlJywKICAgICAgICAncHJldmlvdXMnID0+ICdWb3JoZXJpZ2UnLAogICAgXSwKICAgICdhcmlhJyA9PiBbCiAgICAgICAgJ3NvcnRBc2NlbmRpbmcnICA9PiAnOiBha3RpdmllcmVuIHVtIGF1ZnN0ZWlnZW5kIHp1IFNvcnRpZXJlbicsCiAgICAgICAgJ3NvcnREZXNjZW5kaW5nJyA9PiAnOiBha3RpdmllcmVuIHVtIGFic3RlaWdlbmQgenUgU29ydGllcmVuJywKICAgIF0sCiAgICAnZXhwb3J0JyA9PiBbCiAgICAgICAgJ2NvcHknICAgICAgICAgICAgICA9PiAnS29waWVyZW4nLAogICAgICAgICdleGNlbCcgICAgICAgICAgICAgPT4gJ0V4Y2VsJywKICAgICAgICAnY3N2JyAgICAgICAgICAgICAgID0+ICdDU1YnLAogICAgICAgICdwZGYnICAgICAgICAgICAgICAgPT4gJ1BERicsCiAgICAgICAgJ3ByaW50JyAgICAgICAgICAgICA9PiAnRHJ1Y2tlbicsCiAgICAgICAgJ2NvbHVtbl92aXNpYmlsaXR5JyA9PiAnU2ljaHRiYXJrZWl0IGRlciBTcGFsdGUnLAogICAgXSwKCiAgICAvLyBnbG9iYWwgY3J1ZCAtIGVycm9ycwogICAgJ3VuYXV0aG9yaXplZF9hY2Nlc3MnID0+ICdVbmJlZnVndGVyIFp1Z3JpZmYgLSBTaWUgaGFiZW4gbmljaHQgZGllIG5vdHdlbmRpZ2VuIFJlY2h0ZSB1bSBkaWVzZSBTZWl0ZSBhbnp1emVpZ2VuLicsCiAgICAncGxlYXNlX2ZpeCcgICAgICAgICAgPT4gJ0JpdHRlIGJlaGViZW4gU2llIGRpZSBmb2xnZW5kZW4gRmVobGVyOicsCgogICAgLy8gZ2xvYmFsIGNydWQgLSBzdWNjZXNzIC8gZXJyb3Igbm90aWZpY2F0aW9uIGJ1YmJsZXMKICAgICdpbnNlcnRfc3VjY2VzcycgPT4gJ0RlciBFaW50cmFnIHd1cmRlIGVyZm9sZ3JlaWNoIGFuZ2VsZWd0LicsCiAgICAndXBkYXRlX3N1Y2Nlc3MnID0+ICdEZXIgRWludHJhZyB3dXJkZSBlcmZvbGdyZWljaCBnZcOkbmRlcnQuJywKCiAgICAvLyBDUlVEIHJlb3JkZXIgdmlldwogICAgJ3Jlb3JkZXInICAgICAgICAgICAgICAgICAgICAgID0+ICdTb3J0aWVyZScsCiAgICAncmVvcmRlcl90ZXh0JyAgICAgICAgICAgICAgICAgPT4gJ1p1bSDDhG5kZXJuIGRlciBSZWloZW5mb2xnZSBFaW50csOkZ2UgdmVyc2NoaWViZW4uIChEcmFnJkRyb3ApJywKICAgICdyZW9yZGVyX3N1Y2Nlc3NfdGl0bGUnICAgICAgICA9PiAnRmVydGlnJywKICAgICdyZW9yZGVyX3N1Y2Nlc3NfbWVzc2FnZScgICAgICA9PiAnRGllIFJlaWhlbmZvbGdlIHd1cmRlIGdlc3BlaWNoZXJ0JywKICAgICdyZW9yZGVyX2Vycm9yX3RpdGxlJyAgICAgICAgICA9PiAnRmVobGVyJywKICAgICdyZW9yZGVyX2Vycm9yX21lc3NhZ2UnICAgICAgICA9PiAnRGllIFJlaWhlbmZvbGdlIGtvbm50ZSBuaWNodCBnZXNwZWljaGVydCB3ZXJkZW4nLAoKICAgIC8vIENSVUQgeWVzL25vCiAgICAneWVzJyA9PiAnSmEnLAogICAgJ25vJyAgPT4gJ05laW4nLAoKICAgIC8vIENSVUQgZmlsdGVycyBuYXZiYXIgdmlldwogICAgJ2ZpbHRlcnMnICAgICAgICA9PiAnRmlsdGVyJywKICAgICd0b2dnbGVfZmlsdGVycycgPT4gJ0ZpbHRlciB1bXNjaGFsdGVuJywKICAgICdyZW1vdmVfZmlsdGVycycgPT4gJ0ZpbHRlciBlbnRmZXJuZW4nLAoKICAgIC8vIEZpZWxkcwogICAgJ2Jyb3dzZV91cGxvYWRzJyAgICAgICAgICAgID0+ICdVcGxvYWRzIGR1cmNoc3VjaGVuJywKICAgICdjbGVhcicgICAgICAgICAgICAgICAgICAgICA9PiAnTMO2c2NoZW4nLAogICAgJ3BhZ2VfbGluaycgICAgICAgICAgICAgICAgID0+ICdMaW5rIHp1ciBTZWl0ZScsCiAgICAncGFnZV9saW5rX3BsYWNlaG9sZGVyJyAgICAgPT4gJ2h0dHA6Ly9leGFtcGxlLmNvbS9paHJlLWdld3VlbnNjaHRlLXNlaXRlJywKICAgICdpbnRlcm5hbF9saW5rJyAgICAgICAgICAgICA9PiAnSW50ZXJuZXIgTGluaycsCiAgICAnaW50ZXJuYWxfbGlua19wbGFjZWhvbGRlcicgPT4gJ1VSTC1zaWNoZXJlciBOYW1lICgiU2x1ZyIpLiBCc3A6IFwnYWRtaW4vcGFnZVwnIChvaG5lIEFuZsO8aHJ1bmdzemVpY2hlbikgZsO8ciBcJzp1cmxcJycsCiAgICAnZXh0ZXJuYWxfbGluaycgICAgICAgICAgICAgPT4gJ0V4dGVybmVyIExpbmsnLAogICAgJ2Nob29zZV9maWxlJyAgICAgICAgICAgICAgID0+ICdEYXRlaSBhdXN3w6RobGVuJywKCiAgICAvL1RhYmxlIGZpZWxkCiAgICAndGFibGVfY2FudF9hZGQnICAgID0+ICdLYW5uIDplbnRpdHkgbmljaHQgaGluenVmw7xnZW4nLAogICAgJ3RhYmxlX21heF9yZWFjaGVkJyA9PiAnTWF4aW1hbGUgQW56YWhsIHZvbiA6bWF4IGVycmVpY2h0JywKCiAgICAvLyBGaWxlIG1hbmFnZXIKICAgICdmaWxlX21hbmFnZXInID0+ICdEYXRlaS1NYW5hZ2VyJywKXTsKIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";