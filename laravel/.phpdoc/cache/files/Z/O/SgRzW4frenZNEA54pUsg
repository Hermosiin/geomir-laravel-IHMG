1711241704
waR3U4bTeM%3A0fad9560a7444adc199edd494734c43a-6c56665cf2bae1d72d6b50e3530f391e
s:21644:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjZjNTY2NjVjZjJiYWUxZDcyZDZiNTBlMzUzMGYzOTFlIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6ODoiYmFzZS5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo0OToidmVuZG9yL2JhY2twYWNrL2NydWQvc3JjL2NvbmZpZy9iYWNrcGFjay9iYXNlLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MTUzMDY6Ijw/cGhwCgpyZXR1cm4gWwoKICAgIC8qCiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIHwgTG9vayAmIGZlZWwgY3VzdG9taXphdGlvbnMKICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgfAogICAgfCBNYWtlIGl0IHlvdXJzLgogICAgfAogICAgKi8KCiAgICAvLyBEYXRlICYgRGF0ZXRpbWUgRm9ybWF0IFN5bnRheDogaHR0cHM6Ly9jYXJib24ubmVzYm90LmNvbS9kb2NzLyNhcGktbG9jYWxpemF0aW9uCiAgICAnZGVmYXVsdF9kYXRlX2Zvcm1hdCcgICAgID0+ICdEIE1NTSBZWVlZJywKICAgICdkZWZhdWx0X2RhdGV0aW1lX2Zvcm1hdCcgPT4gJ0QgTU1NIFlZWVksIEhIOm1tJywKCiAgICAvLyBEaXJlY3Rpb24sIGFjY29yZGluZyB0byBsYW5ndWFnZQogICAgLy8gKGxlZnQtdG8tcmlnaHQgdnMgcmlnaHQtdG8tbGVmdCkKICAgICdodG1sX2RpcmVjdGlvbicgPT4gJ2x0cicsCgogICAgLy8gLS0tLQogICAgLy8gSEVBRAogICAgLy8gLS0tLQoKICAgIC8vIFByb2plY3QgbmFtZS4gU2hvd24gaW4gdGhlIHdpbmRvdyB0aXRsZS4KICAgICdwcm9qZWN0X25hbWUnID0+ICdCYWNrcGFjayBBZG1pbiBQYW5lbCcsCgogICAgLy8gV2hlbiBjbGlja2luZyBvbiB0aGUgYWRtaW4gcGFuZWwncyB0b3AtbGVmdCBsb2dvL25hbWUsCiAgICAvLyB3aGVyZSBzaG91bGQgdGhlIHVzZXIgYmUgcmVkaXJlY3RlZD8KICAgIC8vIFRoZSBzdHJpbmcgYmVsb3cgd2lsbCBiZSBwYXNzZWQgdGhyb3VnaCB0aGUgdXJsKCkgaGVscGVyLgogICAgLy8gLSBkZWZhdWx0OiAnJyAocHJvamVjdCByb290KQogICAgLy8gLSBhbHRlcm5hdGl2ZTogJ2FkbWluJyAodGhlIGFkbWluJ3MgZGFzaGJvYXJkKQogICAgJ2hvbWVfbGluaycgPT4gJycsCgogICAgLy8gQ29udGVudCBvZiB0aGUgSFRNTCBtZXRhIHJvYm90cyB0YWcgdG8gcHJldmVudCBpbmRleGluZyBhbmQgbGluayBmb2xsb3dpbmcKICAgICdtZXRhX3JvYm90c19jb250ZW50JyA9PiAnbm9pbmRleCwgbm9mb2xsb3cnLAoKICAgIC8vIC0tLS0tLS0tLQogICAgLy8gREFTSEJPQVJECiAgICAvLyAtLS0tLS0tLS0KCiAgICAvLyBTaG93ICJHZXR0aW5nIFN0YXJ0ZWQgd2l0aCBCYWNrcGFjayIgaW5mbyBibG9jaz8KICAgICdzaG93X2dldHRpbmdfc3RhcnRlZCcgPT4gZW52KCdBUFBfRU5WJykgPT0gJ2xvY2FsJywKCiAgICAvLyAtLS0tLS0KICAgIC8vIFNUWUxFUwogICAgLy8gLS0tLS0tCgogICAgLy8gQ1NTIGZpbGVzIHRoYXQgYXJlIGxvYWRlZCBpbiBhbGwgcGFnZXMsIHVzaW5nIExhcmF2ZWwncyBhc3NldCgpIGhlbHBlcgogICAgJ3N0eWxlcycgPT4gWwogICAgICAgICdwYWNrYWdlcy9iYWNrcGFjay9iYXNlL2Nzcy9idW5kbGUuY3NzJywgLy8gaGFzIHByaW1hcnkgY29sb3IgZWxlY3RyaWMgcHVycGxlIChiYWNrcGFjayBkZWZhdWx0KQogICAgICAgIC8vICdwYWNrYWdlcy9iYWNrcGFjay9iYXNlL2Nzcy9ibHVlLWJ1bmRsZS5jc3MnLCAvLyBoYXMgcHJpbWFyeSBjb2xvciBibHVlCgogICAgICAgIC8vIEhlcmUncyB3aGF0J3MgaW5zaWRlIHRoZSBidW5kbGU6CiAgICAgICAgLy8gJ3BhY2thZ2VzL0BkaWdpdGFsbHloYXBweS9iYWNrc3RyYXAvY3NzL3N0eWxlLm1pbi5jc3MnLAogICAgICAgIC8vICdwYWNrYWdlcy9hbmltYXRlLmNzcy9hbmltYXRlLm1pbi5jc3MnLAogICAgICAgIC8vICdwYWNrYWdlcy9ub3R5L25vdHkuY3NzJywKCiAgICAgICAgLy8gTG9hZCB0aGUgZm9udHMgc2VwYXJhdGVseSAoc28gdGhhdCB5b3UgY2FuIHJlcGxhY2UgdGhlbSBhdCB3aWxsKToKICAgICAgICAncGFja2FnZXMvc291cmNlLXNhbnMtcHJvL3NvdXJjZS1zYW5zLXByby5jc3MnLAogICAgICAgICdwYWNrYWdlcy9saW5lLWF3ZXNvbWUvY3NzL2xpbmUtYXdlc29tZS5taW4uY3NzJywKCiAgICAgICAgLy8gRXhhbXBsZSAodGhlIGZvbnRzIGFib3ZlLCBsb2FkZWQgZnJvbSBDRE4gaW5zdGVhZCkKICAgICAgICAvLyAnaHR0cHM6Ly9tYXhjZG4uaWNvbnM4LmNvbS9mb250cy9saW5lLWF3ZXNvbWUvMS4xL2Nzcy9saW5lLWF3ZXNvbWUtZm9udC1hd2Vzb21lLm1pbi5jc3MnLAogICAgICAgIC8vICdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9U291cmNlK1NhbnMrUHJvOjMwMCw0MDAsNjAwLDcwMCwzMDBpdGFsaWMsNDAwaXRhbGljLDYwMGl0YWxpYycsCgogICAgICAgIC8vIEV4YW1wbGUgKGxvYWQgZm9udC1hd2Vzb21lIGluc3RlYWQgb2YgbGluZS1hd2Vzb21lKToKICAgICAgICAvLyAnaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvZm9udC1hd2Vzb21lLzUuMTAuMi9jc3MvYWxsLm1pbi5jc3MnLAogICAgXSwKCiAgICAvLyBDU1MgZmlsZXMgdGhhdCBhcmUgbG9hZGVkIGluIGFsbCBwYWdlcywgdXNpbmcgTGFyYXZlbCdzIG1peCgpIGhlbHBlcgogICAgJ21peF9zdHlsZXMnID0+IFsgLy8gZmlsZV9wYXRoID0+IG1hbmlmZXN0X2RpcmVjdG9yeV9wYXRoCiAgICAgICAgLy8gJ2Nzcy9hcHAuY3NzJyA9PiAnJywKICAgIF0sCgogICAgLy8gQ1NTIGZpbGVzIHRoYXQgYXJlIGxvYWRlZCBpbiBhbGwgcGFnZXMsIHVzaW5nIExhcmF2ZWwncyBAdml0ZSgpIGhlbHBlcgogICAgLy8gUGxlYXNlIG5vdGUgdGhhdCBzdXBwb3J0IGZvciBWaXRlIHdhcyBhZGRlZCBpbiBMYXJhdmVsIDkuMTkuIEVhcmxpZXIgdmVyc2lvbnMgYXJlIG5vdCBhYmxlIHRvIHVzZSB0aGlzIGZlYXR1cmUuCiAgICAndml0ZV9zdHlsZXMnID0+IFsgLy8gcmVzb3VyY2UgZmlsZV9wYXRoCiAgICAgICAgLy8gJ3Jlc291cmNlcy9jc3MvYXBwLmNzcycgPT4gJycsCiAgICBdLAoKICAgIC8vIC0tLS0tLQogICAgLy8gSEVBREVSCiAgICAvLyAtLS0tLS0KCiAgICAvLyBNZW51IGxvZ28uIFlvdSBjYW4gcmVwbGFjZSB0aGlzIHdpdGggYW4gPGltZz4gdGFnIGlmIHlvdSBoYXZlIGEgbG9nby4KICAgICdwcm9qZWN0X2xvZ28nICAgPT4gJzxiPkJhY2s8L2I+cGFjaycsCgogICAgLy8gU2hvdyAvIGhpZGUgYnJlYWRjcnVtYnMgb24gYWRtaW4gcGFuZWwgcGFnZXMuCiAgICAnYnJlYWRjcnVtYnMnID0+IHRydWUsCgogICAgLy8gSG9yaXpvbnRhbCBuYXZiYXIgY2xhc3Nlcy4gSGVscHMgbWFrZSB0aGUgYWRtaW4gcGFuZWwgbG9vayBzaW1pbGFyIHRvIHlvdXIgcHJvamVjdCdzIGRlc2lnbi4KICAgICdoZWFkZXJfY2xhc3MnID0+ICdhcHAtaGVhZGVyIGJnLWxpZ2h0IGJvcmRlci0wIG5hdmJhcicsCiAgICAvLyBGb3IgYmFja2dyb3VuZCBjb2xvcnMgdXNlOiBiZy1kYXJrLCBiZy1wcmltYXJ5LCBiZy1zZWNvbmRhcnksIGJnLWRhbmdlciwgYmctd2FybmluZywgYmctc3VjY2VzcywgYmctaW5mbywgYmctYmx1ZSwgYmctbGlnaHQtYmx1ZSwgYmctaW5kaWdvLCBiZy1wdXJwbGUsIGJnLXBpbmssIGJnLXJlZCwgYmctb3JhbmdlLCBiZy15ZWxsb3csIGJnLWdyZWVuLCBiZy10ZWFsLCBiZy1jeWFuLCBiZy13aGl0ZQogICAgLy8gRm9yIGxpbmtzIHRvIGJlIHZpc2libGUgb24gZGlmZmVyZW50IGJhY2tncm91bmQgY29sb3JzIHVzZTogIm5hdmJhci1kYXJrIiwgIm5hdmJhci1saWdodCIsICJuYXZiYXItY29sb3IiCgogICAgLy8gLS0tLQogICAgLy8gQk9EWQogICAgLy8gLS0tLQoKICAgIC8vIEJvZHkgZWxlbWVudCBjbGFzc2VzLgogICAgJ2JvZHlfY2xhc3MnID0+ICdhcHAgYXNpZGUtbWVudS1maXhlZCBzaWRlYmFyLWxnLXNob3cnLAogICAgLy8gVHJ5IHNpZGViYXItaGlkZGVuLCBzaWRlYmFyLWZpeGVkLCBzaWRlYmFyLWNvbXBhY3QsIHNpZGViYXItbGctc2hvdwoKICAgIC8vIFNpZGViYXIgZWxlbWVudCBjbGFzc2VzLgogICAgJ3NpZGViYXJfY2xhc3MnID0+ICdzaWRlYmFyIHNpZGViYXItcGlsbHMgYmctbGlnaHQnLAogICAgLy8gUmVtb3ZlICJzaWRlYmFyLXRyYW5zcGFyZW50IiBmb3Igc3RhbmRhcmQgc2lkZWJhciBsb29rCiAgICAvLyBUcnkgInNpZGViYXItbGlnaHQiIG9yICJzaWRlYmFyLWRhcmsiIGZvciBkYXJrL2xpZ2h0IGxpbmtzCiAgICAvLyBZb3UgY2FuIGFsc28gYWRkIGEgYmFja2dyb3VuZCBjbGFzcyBsaWtlIGJnLWRhcmssIGJnLXByaW1hcnksIGJnLXNlY29uZGFyeSwgYmctZGFuZ2VyLCBiZy13YXJuaW5nLCBiZy1zdWNjZXNzLCBiZy1pbmZvLCBiZy1ibHVlLCBiZy1saWdodC1ibHVlLCBiZy1pbmRpZ28sIGJnLXB1cnBsZSwgYmctcGluaywgYmctcmVkLCBiZy1vcmFuZ2UsIGJnLXllbGxvdywgYmctZ3JlZW4sIGJnLXRlYWwsIGJnLWN5YW4KCiAgICAvLyAtLS0tLS0KICAgIC8vIEZPT1RFUgogICAgLy8gLS0tLS0tCgogICAgLy8gRm9vdGVyIGVsZW1lbnQgY2xhc3Nlcy4KICAgICdmb290ZXJfY2xhc3MnID0+ICdhcHAtZm9vdGVyIGQtcHJpbnQtbm9uZScsCiAgICAvLyBoaWRlIGl0IHdpdGggZC1ub25lCiAgICAvLyBjaGFuZ2UgYmFja2dyb3VuZCBjb2xvciB3aXRoIGJnLWRhcmssIGJnLXByaW1hcnksIGJnLXNlY29uZGFyeSwgYmctZGFuZ2VyLCBiZy13YXJuaW5nLCBiZy1zdWNjZXNzLCBiZy1pbmZvLCBiZy1ibHVlLCBiZy1saWdodC1ibHVlLCBiZy1pbmRpZ28sIGJnLXB1cnBsZSwgYmctcGluaywgYmctcmVkLCBiZy1vcmFuZ2UsIGJnLXllbGxvdywgYmctZ3JlZW4sIGJnLXRlYWwsIGJnLWN5YW4sIGJnLXdoaXRlCgogICAgLy8gRGV2ZWxvcGVyIG9yIGNvbXBhbnkgbmFtZS4gU2hvd24gaW4gZm9vdGVyLgogICAgJ2RldmVsb3Blcl9uYW1lJyA9PiAnQ3Jpc3RpYW4gVGFiYWNpdHUnLAoKICAgIC8vIERldmVsb3BlciB3ZWJzaXRlLiBMaW5rIGluIGZvb3Rlci4gVHlwZSBmYWxzZSBpZiB5b3Ugd2FudCB0byBoaWRlIGl0LgogICAgJ2RldmVsb3Blcl9saW5rJyA9PiAnaHR0cDovL3RhYmFjaXR1LnJvJywKCiAgICAvLyBTaG93IHBvd2VyZWQgYnkgTGFyYXZlbCBCYWNrcGFjayBpbiB0aGUgZm9vdGVyPyB0cnVlL2ZhbHNlCiAgICAnc2hvd19wb3dlcmVkX2J5JyA9PiB0cnVlLAoKICAgIC8vIC0tLS0tLS0KICAgIC8vIFNDUklQVFMKICAgIC8vIC0tLS0tLS0KCiAgICAvLyBKUyBmaWxlcyB0aGF0IGFyZSBsb2FkZWQgaW4gYWxsIHBhZ2VzLCB1c2luZyBMYXJhdmVsJ3MgYXNzZXQoKSBoZWxwZXIKICAgICdzY3JpcHRzJyA9PiBbCiAgICAgICAgLy8gQmFja3N0cmFwIGluY2x1ZGVzIGpRdWVyeSwgQm9vdHN0cmFwLCBDb3JlVUksIFBOb3RpZnksIFBvcHBlcgogICAgICAgICdwYWNrYWdlcy9iYWNrcGFjay9iYXNlL2pzL2J1bmRsZS5qcycsCgogICAgICAgIC8vIGV4YW1wbGVzIChldmVyeXRoaW5nIGluc2lkZSB0aGUgYnVuZGxlLCBsb2FkZWQgZnJvbSBDRE4pCiAgICAgICAgLy8gJ2h0dHBzOi8vY29kZS5qcXVlcnkuY29tL2pxdWVyeS0zLjQuMS5taW4uanMnLAogICAgICAgIC8vICdodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9wb3BwZXIuanMvMS4xNC43L3VtZC9wb3BwZXIubWluLmpzJywKICAgICAgICAvLyAnaHR0cHM6Ly9zdGFja3BhdGguYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvNC4zLjEvanMvYm9vdHN0cmFwLm1pbi5qcycsCiAgICAgICAgLy8gJ2h0dHBzOi8vdW5wa2cuY29tL0Bjb3JldWkvY29yZXVpQDIuMS4xNi9kaXN0L2pzL2NvcmV1aS5taW4uanMnLAogICAgICAgIC8vICdodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9wYWNlLzEuMC4yL3BhY2UubWluLmpzJywKICAgICAgICAvLyAnaHR0cHM6Ly91bnBrZy5jb20vc3dlZXRhbGVydC9kaXN0L3N3ZWV0YWxlcnQubWluLmpzJywKICAgICAgICAvLyAnaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvbm90eS8zLjEuNC9ub3R5Lm1pbi5qcycKCiAgICAgICAgLy8gZXhhbXBsZXMgKFZ1ZUpTIG9yIFJlYWN0KQogICAgICAgIC8vICdodHRwczovL3VucGtnLmNvbS92dWVAMi40LjQvZGlzdC92dWUubWluLmpzJywKICAgICAgICAvLyAnaHR0cHM6Ly91bnBrZy5jb20vcmVhY3RAMTYvdW1kL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJywKICAgICAgICAvLyAnaHR0cHM6Ly91bnBrZy5jb20vcmVhY3QtZG9tQDE2L3VtZC9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnLAogICAgXSwKCiAgICAvLyBKUyBmaWxlcyB0aGF0IGFyZSBsb2FkZWQgaW4gYWxsIHBhZ2VzLCB1c2luZyBMYXJhdmVsJ3MgbWl4KCkgaGVscGVyCiAgICAnbWl4X3NjcmlwdHMnID0+IFsgLy8gZmlsZV9wYXRoID0+IG1hbmlmZXN0X2RpcmVjdG9yeV9wYXRoCiAgICAgICAgLy8gJ2pzL2FwcC5qcycgPT4gJycsCiAgICBdLAoKICAgIC8vIEpTIGZpbGVzIHRoYXQgYXJlIGxvYWRlZCBpbiBhbGwgcGFnZXMsIHVzaW5nIExhcmF2ZWwncyBAdml0ZSgpIGhlbHBlcgogICAgJ3ZpdGVfc2NyaXB0cycgPT4gWyAvLyByZXNvdXJjZSBmaWxlX3BhdGgKICAgICAgICAvLyAncmVzb3VyY2VzL2pzL2FwcC5qcycsCiAgICBdLAoKICAgIC8vIC0tLS0tLS0tLS0tLS0KICAgIC8vIENBQ0hFLUJVU1RJTkcKICAgIC8vIC0tLS0tLS0tLS0tLS0KCiAgICAvLyBBbGwgSlMgYW5kIENTUyBhc3NldHMgZGVmaW5lZCBhYm92ZSBoYXZlIHRoaXMgc3RyaW5nIGFwcGVuZGVkIGFzIHF1ZXJ5IHN0cmluZyAoP3Y9c3RyaW5nKS4KICAgIC8vIElmIHlvdSB3YW50IHRvIG1hbnVhbGx5IHRyaWdnZXIgY2FjaGVidXN0aW5nIGZvciBhbGwgc3R5bGVzIGFuZCBzY3JpcHRzLAogICAgLy8gYXBwZW5kIG9yIHByZXBlbmQgc29tZXRoaW5nIHRvIHRoZSBzdHJpbmcgYmVsb3csIHNvIHRoYXQgaXQncyBkaWZmZXJlbnQuCiAgICAnY2FjaGVidXN0aW5nX3N0cmluZycgPT4gXFBhY2thZ2VWZXJzaW9uc1xWZXJzaW9uczo6Z2V0VmVyc2lvbignYmFja3BhY2svY3J1ZCcpLAoKICAgIC8qCiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIHwgUmVnaXN0cmF0aW9uIE9wZW4KICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgfAogICAgfCBDaG9vc2Ugd2hldGhlciBuZXcgdXNlcnMvYWRtaW5zIGFyZSBhbGxvd2VkIHRvIHJlZ2lzdGVyLgogICAgfCBUaGlzIHdpbGwgc2hvdyB0aGUgUmVnaXN0ZXIgYnV0dG9uIG9uIHRoZSBsb2dpbiBwYWdlIGFuZCBhbGxvdyBhY2Nlc3MgdG8gdGhlCiAgICB8IFJlZ2lzdGVyIGZ1bmN0aW9ucyBpbiBBdXRoQ29udHJvbGxlci4KICAgIHwKICAgIHwgQnkgZGVmYXVsdCB0aGUgcmVnaXN0cmF0aW9uIGlzIG9wZW4gb25seSBvbiBsb2NhbGhvc3QuCiAgICAqLwoKICAgICdyZWdpc3RyYXRpb25fb3BlbicgPT4gZW52KCdCQUNLUEFDS19SRUdJU1RSQVRJT05fT1BFTicsIGVudignQVBQX0VOVicpID09PSAnbG9jYWwnKSwKCiAgICAvKgogICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICB8IFJvdXRpbmcKICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgKi8KCiAgICAvLyBUaGUgcHJlZml4IHVzZWQgaW4gYWxsIGJhc2Ugcm91dGVzICh0aGUgJ2FkbWluJyBpbiBhZG1pbi9kYXNoYm9hcmQpCiAgICAvLyBZb3UgY2FuIG1ha2Ugc3VyZSBhbGwgeW91ciBVUkxzIHVzZSB0aGlzIHByZWZpeCBieSB1c2luZyB0aGUgYmFja3BhY2tfdXJsKCkgaGVscGVyIGluc3RlYWQgb2YgdXJsKCkKICAgICdyb3V0ZV9wcmVmaXgnID0+ICdhZG1pbicsCgogICAgLy8gVGhlIHdlYiBtaWRkbGV3YXJlIChncm91cCkgdXNlZCBpbiBhbGwgYmFzZSAmIENSVUQgcm91dGVzCiAgICAvLyBJZiB5b3UndmUgbW9kaWZpZWQgeW91ciAid2ViIiBtaWRkbGV3YXJlIGdyb3VwIChleDogcmVtb3ZlZCBzZXNzaW9ucyksIHlvdSBjYW4gdXNlIGEgZGlmZmVyZW50CiAgICAvLyByb3V0ZSBncm91cCwgdGhhdCBoYXMgYWxsIHRoZSB0aGUgbWlkZGxld2FyZSBsaXN0ZWQgYmVsb3cgaW4gdGhlIGNvbW1lbnRzLgogICAgJ3dlYl9taWRkbGV3YXJlJyA9PiAnd2ViJywKICAgIC8vIE9yIHlvdSBjYW4gY29tbWVudCB0aGUgYWJvdmUsIGFuZCB1bmNvbW1lbnQgdGhlIGNvbXBsZXRlIGxpc3QgYmVsb3cuCiAgICAvLyAnd2ViX21pZGRsZXdhcmUnID0+IFsKICAgIC8vICAgICBcQXBwXEh0dHBcTWlkZGxld2FyZVxFbmNyeXB0Q29va2llczo6Y2xhc3MsCiAgICAvLyAgICAgXElsbHVtaW5hdGVcQ29va2llXE1pZGRsZXdhcmVcQWRkUXVldWVkQ29va2llc1RvUmVzcG9uc2U6OmNsYXNzLAogICAgLy8gICAgIFxJbGx1bWluYXRlXFNlc3Npb25cTWlkZGxld2FyZVxTdGFydFNlc3Npb246OmNsYXNzLAogICAgLy8gICAgIFxJbGx1bWluYXRlXFZpZXdcTWlkZGxld2FyZVxTaGFyZUVycm9yc0Zyb21TZXNzaW9uOjpjbGFzcywKICAgIC8vICAgICBcQXBwXEh0dHBcTWlkZGxld2FyZVxWZXJpZnlDc3JmVG9rZW46OmNsYXNzLAogICAgLy8gXSwKCiAgICAvLyBTZXQgdGhpcyB0byBmYWxzZSBpZiB5b3Ugd291bGQgbGlrZSB0byB1c2UgeW91ciBvd24gQXV0aENvbnRyb2xsZXIgYW5kIFBhc3N3b3JkQ29udHJvbGxlcgogICAgLy8gKHlvdSB0aGVuIG5lZWQgdG8gc2V0dXAgeW91ciBhdXRoIHJvdXRlcyBtYW51YWxseSBpbiB5b3VyIHJvdXRlcy5waHAgZmlsZSkKICAgIC8vIFdhcm5pbmc6IGlmIHlvdSBkaXNhYmxlIHRoaXMsIHRoZSBwYXNzd29yZCByZWNvdmVyeSByb3V0ZXMgKGJlbG93KSB3aWxsIGJlIGRpc2FibGVkIHRvbyEKICAgICdzZXR1cF9hdXRoX3JvdXRlcycgPT4gdHJ1ZSwKCiAgICAvLyBTZXQgdGhpcyB0byBmYWxzZSBpZiB5b3Ugd291bGQgbGlrZSB0byBza2lwIGFkZGluZyB0aGUgZGFzaGJvYXJkIHJvdXRlcwogICAgLy8gKHlvdSB0aGVuIG5lZWQgdG8gb3ZlcndyaXRlIHRoZSBsb2dpbiByb3V0ZSBvbiB5b3VyIEF1dGhDb250cm9sbGVyKQogICAgJ3NldHVwX2Rhc2hib2FyZF9yb3V0ZXMnID0+IHRydWUsCgogICAgLy8gU2V0IHRoaXMgdG8gZmFsc2UgaWYgeW91IHdvdWxkIGxpa2UgdG8gc2tpcCBhZGRpbmcgIm15IGFjY291bnQiIHJvdXRlcwogICAgLy8gKHlvdSB0aGVuIG5lZWQgdG8gbWFudWFsbHkgZGVmaW5lIHRoZSByb3V0ZXMgaW4geW91ciB3ZWIucGhwKQogICAgJ3NldHVwX215X2FjY291bnRfcm91dGVzJyA9PiB0cnVlLAoKICAgIC8vIFNldCB0aGlzIHRvIGZhbHNlIGlmIHlvdSB3b3VsZCBsaWtlIHRvIHNraXAgYWRkaW5nIHRoZSBwYXNzd29yZCByZWNvdmVyeSByb3V0ZXMKICAgIC8vICh5b3UgdGhlbiBuZWVkIHRvIG1hbnVhbGx5IGRlZmluZSB0aGUgcm91dGVzIGluIHlvdXIgd2ViLnBocCkKICAgICdzZXR1cF9wYXNzd29yZF9yZWNvdmVyeV9yb3V0ZXMnID0+IHRydWUsCgogICAgLyoKICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgfCBTZWN1cml0eQogICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAqLwoKICAgIC8vIEJhY2twYWNrIHdpbGwgcHJldmVudCB2aXNpdG9ycyBmcm9tIHJlcXVlc3RpbmcgcGFzc3dvcmQgcmVjb3ZlcnkgdG9vIG1hbnkgdGltZXMKICAgIC8vIGZvciBhIGNlcnRhaW4gZW1haWwsIHRvIG1ha2Ugc3VyZSB0aGV5IGNhbm5vdCBiZSBzcGFtbWVkIHRoYXQgd2F5LgogICAgLy8gSG93IG1hbnkgc2Vjb25kcyBzaG91bGQgYSB2aXNpdG9yIHdhaXQsIGFmdGVyIHRoZXkndmUgcmVxdWVzdGVkIGEKICAgIC8vIHBhc3N3b3JkIHJlc2V0LCBiZWZvcmUgdGhleSBjYW4gdHJ5IGFnYWluIGZvciB0aGUgc2FtZSBlbWFpbD8KICAgICdwYXNzd29yZF9yZWNvdmVyeV90aHJvdHRsZV9ub3RpZmljYXRpb25zJyA9PiA2MDAsIC8vIHRpbWUgaW4gc2Vjb25kcwoKICAgIC8vIEJhY2twYWNrIHdpbGwgcHJldmVudCBhbiBJUCBmcm9tIHRyeWluZyB0byByZXNldCB0aGUgcGFzc3dvcmQgdG9vIG1hbnkgdGltZXMsCiAgICAvLyBzbyB0aGF0IGEgbWFsaWNpb3VzIGFjdG9yIGNhbm5vdCB0cnkgdG9vIG1hbnkgZW1haWxzLCB0b28gc2VlIGlmIHRoZXkgaGF2ZQogICAgLy8gYWNjb3VudHMgb3IgdG8gaW5jcmVhc2UgdGhlIEFXUy9TZW5kR3JpZC9ldGMgYmlsbC4KICAgIC8vCiAgICAvLyBIb3cgbWFueSB0aW1lcyBpbiBhbnkgZ2l2ZW4gdGltZSBwZXJpb2Qgc2hvdWxkIHRoZSB1c2VyIGJlIGFsbG93ZWQgdG8KICAgIC8vIGF0dGVtcHQgYSBwYXNzd29yZCByZXNldD8gVGFrZSBpbnRvIGFjY291bnQgdGhhdCB1c2VyIG1pZ2h0IHdyb25nbHkKICAgIC8vIHR5cGUgYW4gZW1haWwgYXQgZmlyc3QsIHNvIGF0IGxlYXN0IGFsbG93IG9uZSBtb3JlIHRyeS4KICAgIC8vIERlZmF1bHRzIHRvIDMsMTAgLSAzIHRpbWVzIGluIDEwIG1pbnV0ZXMuCiAgICAncGFzc3dvcmRfcmVjb3ZlcnlfdGhyb3R0bGVfYWNjZXNzJyA9PiAnMywxMCcsCgogICAgLyoKICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgfCBBdXRoZW50aWNhdGlvbgogICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAqLwoKICAgIC8vIEZ1bGx5IHF1YWxpZmllZCBuYW1lc3BhY2Ugb2YgdGhlIFVzZXIgbW9kZWwKICAgICd1c2VyX21vZGVsX2ZxbicgPT4gY29uZmlnKCdhdXRoLnByb3ZpZGVycy51c2Vycy5tb2RlbCcpLAogICAgLy8gJ3VzZXJfbW9kZWxfZnFuJyA9PiBBcHBcVXNlcjo6Y2xhc3MsIC8vIHdvcmtzIG9uIExhcmF2ZWwgPD0gNwogICAgLy8gJ3VzZXJfbW9kZWxfZnFuJyA9PiBBcHBcTW9kZWxzXFVzZXI6OmNsYXNzLCAvLyB3b3JrcyBvbiBMYXJhdmVsID49IDgKCiAgICAvLyBUaGUgY2xhc3NlcyBmb3IgdGhlIG1pZGRsZXdhcmUgdG8gY2hlY2sgaWYgdGhlIHZpc2l0b3IgaXMgYW4gYWRtaW4KICAgIC8vIENhbiBiZSBhIHNpbmdsZSBjbGFzcyBvciBhbiBhcnJheSBvZiBjbGFzc2VzCiAgICAnbWlkZGxld2FyZV9jbGFzcycgPT4gWwogICAgICAgIEFwcFxIdHRwXE1pZGRsZXdhcmVcQ2hlY2tJZkFkbWluOjpjbGFzcywKICAgICAgICBcSWxsdW1pbmF0ZVxGb3VuZGF0aW9uXEh0dHBcTWlkZGxld2FyZVxDb252ZXJ0RW1wdHlTdHJpbmdzVG9OdWxsOjpjbGFzcywKICAgICAgICAvLyBcQmFja3BhY2tcQ1JVRFxhcHBcSHR0cFxNaWRkbGV3YXJlXFVzZUJhY2twYWNrQXV0aEd1YXJkSW5zdGVhZE9mRGVmYXVsdEF1dGhHdWFyZDo6Y2xhc3MsCiAgICBdLAoKICAgIC8vIEFsaWFzIGZvciB0aGF0IG1pZGRsZXdhcmUKICAgICdtaWRkbGV3YXJlX2tleScgPT4gJ2FkbWluJywKICAgIC8vIE5vdGU6IEl0J3MgcmVjb21tZW5kZWQgdG8gdXNlIHRoZSBiYWNrcGFja19taWRkbGV3YXJlKCkgaGVscGVyIGV2ZXJ5d2hlcmUsIHdoaWNoIHB1bGxzIHRoaXMga2V5IGZvciB5b3UuCgogICAgLy8gVXNlcm5hbWUgY29sdW1uIGZvciBhdXRoZW50aWNhdGlvbgogICAgLy8gVGhlIEJhY2twYWNrIGRlZmF1bHQgaXMgdGhlIHNhbWUgYXMgdGhlIExhcmF2ZWwgZGVmYXVsdCAoZW1haWwpCiAgICAvLyBJZiB5b3UgbmVlZCB0byBzd2l0Y2ggdG8gdXNlcm5hbWUsIHlvdSBhbHNvIG5lZWQgdG8gY3JlYXRlIHRoYXQgY29sdW1uIGluIHlvdXIgZGIKICAgICdhdXRoZW50aWNhdGlvbl9jb2x1bW4nICAgICAgPT4gJ2VtYWlsJywKICAgICdhdXRoZW50aWNhdGlvbl9jb2x1bW5fbmFtZScgPT4gJ0VtYWlsJywKCiAgICAvLyBCYWNrcGFjayBhc3N1bWVzIHRoYXQgeW91ciAiZGF0YWJhc2UgZW1haWwgY29sdW1uIiBmb3Igb3BlcmF0aW9ucyBsaWtlIExvZ2luIGFuZCBSZWdpc3RlciBpcyBjYWxsZWQgImVtYWlsIi4KICAgIC8vIElmIHlvdXIgZGF0YWJhc2UgZW1haWwgY29sdW1uIGhhdmUgYSBkaWZmZXJlbnQgbmFtZSwgeW91IGNhbiBjb25maWd1cmUgaXQgaGVyZS4gRWc6IGB1c2VyX21haWxgCiAgICAnZW1haWxfY29sdW1uJyA9PiAnZW1haWwnLAoKICAgIC8vIFRoZSBndWFyZCB0aGF0IHByb3RlY3RzIHRoZSBCYWNrcGFjayBhZG1pbiBwYW5lbC4KICAgIC8vIElmIG51bGwsIHRoZSBjb25maWcuYXV0aC5kZWZhdWx0cy5ndWFyZCB2YWx1ZSB3aWxsIGJlIHVzZWQuCiAgICAnZ3VhcmQnID0+ICdiYWNrcGFjaycsCgogICAgLy8gVGhlIHBhc3N3b3JkIHJlc2V0IGNvbmZpZ3VyYXRpb24gZm9yIEJhY2twYWNrLgogICAgLy8gSWYgbnVsbCwgdGhlIGNvbmZpZy5hdXRoLmRlZmF1bHRzLnBhc3N3b3JkcyB2YWx1ZSB3aWxsIGJlIHVzZWQuCiAgICAncGFzc3dvcmRzJyA9PiAnYmFja3BhY2snLAoKICAgIC8vIFdoYXQga2luZCBvZiBhdmF0YXIgd2lsbCB5b3UgbGlrZSB0byBzaG93IHRvIHRoZSB1c2VyPwogICAgLy8gRGVmYXVsdDogZ3JhdmF0YXIgKGF1dG9tYXRpY2FsbHkgdXNlIHRoZSBncmF2YXRhciBmb3IgdGhlaXIgZW1haWwpCiAgICAvLyBPdGhlciBvcHRpb25zOgogICAgLy8gLSBudWxsIChnZW5lcmljIGltYWdlIHdpdGggdGhlaXIgZmlyc3QgbGV0dGVyKQogICAgLy8gLSBleGFtcGxlX21ldGhvZF9uYW1lIChzcGVjaWZ5IHRoZSBtZXRob2Qgb24gdGhlIFVzZXIgbW9kZWwgdGhhdCByZXR1cm5zIHRoZSBVUkwpCiAgICAnYXZhdGFyX3R5cGUnID0+ICdncmF2YXRhcicsCgogICAgLy8gR3JhdmF0YXIgZmFsbGJhY2sgb3B0aW9ucyBhcmUgJ2lkZW50aWNvbicsICdtb25zdGVyaWQnLCAnd2F2YXRhcicsICdyZXRybycsICdyb2JvaGFzaCcsICdibGFuaycKICAgIC8vICdibGFuaycgd2lsbCBrZWVwIHRoZSBnZW5lcmljIGltYWdlIHdpdGggdGhlIHVzZXIgZmlyc3QgbGV0dGVyCiAgICAnZ3JhdmF0YXJfZmFsbGJhY2snID0+ICdibGFuaycsCgogICAgLyoKICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgfCBUaGVtZSAoVXNlciBJbnRlcmZhY2UpCiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICovCiAgICAvLyBDaGFuZ2UgdGhlIHZpZXcgbmFtZXNwYWNlIGluIG9yZGVyIHRvIGxvYWQgYSBkaWZmZXJlbnQgdGhlbWUgdGhhbiB0aGUgb25lIEJhY2twYWNrIHByb3ZpZGVzLgogICAgLy8gWW91IGNhbiBjcmVhdGUgY2hpbGQgdGhlbWVzIHlvdXJzZWxmLCBieSBjcmVhdGluZyBhIHZpZXcgZm9sZGVyIGFueXdoZXJlIGluIHlvdXIgcmVzb3VyY2VzL3ZpZXdzCiAgICAvLyBhbmQgY2hvb3NpbmcgdGhhdCB2aWV3X25hbWVzcGFjZSBpbnN0ZWFkIG9mIHRoZSBkZWZhdWx0IG9uZS4gQmFja3BhY2sgd2lsbCBsb2FkIGEgZmlsZSBmcm9tIHRoZXJlCiAgICAvLyBpZiBpdCBleGlzdHMsIG90aGVyd2lzZSBpdCB3aWxsIGxvYWQgaXQgZnJvbSB0aGUgZGVmYXVsdCBuYW1lc3BhY2UgKCJiYWNrcGFjazo6IikuCgogICAgJ3ZpZXdfbmFtZXNwYWNlJyA9PiAnYmFja3BhY2s6OicsCgogICAgLy8gRVhBTVBMRTogaWYgeW91IGNyZWF0ZSBhIG5ldyBmb2xkZXIgaW4gcmVzb3VyY2VzL3ZpZXdzL3ZlbmRvci9teW5hbWUvbXlwYWNrYWdlLAogICAgLy8geW91ciBuYW1lc3BhY2Ugd291bGQgYmUgdGhlIG9uZSBiZWxvdy4gSU1QT1JUQU5UOiBpbiB0aGlzIGNhc2UgdGhlIG5hbWVzcGFjZSBlbmRzIHdpdGggYSBkb3QuCiAgICAvLyAndmlld19uYW1lc3BhY2UnID0+ICd2ZW5kb3IubXluYW1lLm15cGFja2FnZS4nLAoKICAgIC8vIFRlbGwgQmFja3BhY2sgdG8gbG9vayBpbiBtb3JlIHBsYWNlcyBmb3IgY29tcG9uZW50IHZpZXdzIChsaWtlIHdpZGdldHMpCiAgICAnY29tcG9uZW50X3ZpZXdfbmFtZXNwYWNlcycgPT4gWwogICAgICAgICd3aWRnZXRzJyA9PiBbCiAgICAgICAgICAgICdiYWNrcGFjazo6d2lkZ2V0cycsIC8vIGZhbGxzIGJhY2sgdG8gJ3Jlc291cmNlcy92aWV3cy92ZW5kb3IvYmFja3BhY2svYmFzZS93aWRnZXRzJwogICAgICAgIF0sCiAgICBdLAoKICAgIC8qCiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIHwgRmlsZSBTeXN0ZW0KICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgKi8KCiAgICAvLyBCYWNrcGFja1xCYXNlIHNldHMgdXAgaXRzIG93biBmaWxlc3lzdGVtIGRpc2ssIGp1c3QgbGlrZSB5b3Ugd291bGQgYnkKICAgIC8vIGFkZGluZyBhbiBlbnRyeSB0byB5b3VyIGNvbmZpZy9maWxlc3lzdGVtcy5waHAuIEl0IHBvaW50cyB0byB0aGUgcm9vdAogICAgLy8gb2YgeW91ciBwcm9qZWN0IGFuZCBpdCdzIHVzZWQgdGhyb3VnaG91dCBhbGwgQmFja3BhY2sgcGFja2FnZXMuCiAgICAvLwogICAgLy8gWW91IGNhbiByZW5hbWUgdGhpcyBkaXNrIGhlcmUuIERlZmF1bHQ6IHJvb3QKICAgICdyb290X2Rpc2tfbmFtZScgPT4gJ3Jvb3QnLAoKICAgIC8qCiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIHwgQmFja3BhY2sgVG9rZW4gVXNlcm5hbWUKICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgfAogICAgfCBJZiB5b3UgaGF2ZSBhY2Nlc3MgdG8gY2xvc2VkLXNvdXJjZSBCYWNrcGFjayBhZGQtb25zLCBwbGVhc2UgcHJvdmlkZQogICAgfCB5b3VyIHRva2VuIHVzZXJuYW1lIGhlcmUsIGlmIHlvdSdyZSBnZXR0aW5nIHllbGxvdyBhbGVydHMgb24geW91cgogICAgfCBhZG1pbiBwYW5lbCdzIHBhZ2VzLiBOb3JtYWxseSB0aGlzIGlzIG5vdCBuZWVkZWQsIGl0IGlzCiAgICB8IHByZWZlcnJlZCB0byBhZGQgdGhpcyBhcyBhbiBlbnZpcm9ubWVudCB2YXJpYWJsZQogICAgfCAobW9zdCBsaWtlbHkgaW4geW91ciAuZW52IGZpbGUpLgogICAgfAogICAgfCBNb3JlIGluZm8gYW5kIHBheW1lbnQgZm9ybSBvbjoKICAgIHwgaHR0cHM6Ly93d3cuYmFja3BhY2tmb3JsYXJhdmVsLmNvbQogICAgfAogICAgKi8KCiAgICAndG9rZW5fdXNlcm5hbWUnID0+IGVudignQkFDS1BBQ0tfVE9LRU5fVVNFUk5BTUUnLCBmYWxzZSksCl07CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";