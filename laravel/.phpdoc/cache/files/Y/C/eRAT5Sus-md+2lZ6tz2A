1711241701
waR3U4bTeM%3A95deffc861035dd317bda3606a66b63f-bf07e573320b399000f81831d211acc6
s:7712:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImJmMDdlNTczMzIwYjM5OTAwMGY4MTgzMWQyMTFhY2M2IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTM6ImFwcC5ibGFkZS5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czozNzoicmVzb3VyY2VzL3ZpZXdzL2xheW91dHMvYXBwLmJsYWRlLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6NDg2NToiPCFkb2N0eXBlIGh0bWw+DQo8aHRtbCBsYW5nPSJ7eyBzdHJfcmVwbGFjZSgnXycsICctJywgYXBwKCktPmdldExvY2FsZSgpKSB9fSI+DQo8aGVhZD4NCiAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+DQogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xIj4NCg0KICAgIDwhLS0gQ1NSRiBUb2tlbiAtLT4NCiAgICA8bWV0YSBuYW1lPSJjc3JmLXRva2VuIiBjb250ZW50PSJ7eyBjc3JmX3Rva2VuKCkgfX0iPg0KDQogICAgPHRpdGxlPnt7IGNvbmZpZygnYXBwLm5hbWUnLCAnTGFyYXZlbCcpIH19PC90aXRsZT4NCg0KICAgIDwhLS0gRm9udHMgLS0+DQogICAgPGxpbmsgcmVsPSJkbnMtcHJlZmV0Y2giIGhyZWY9Ii8vZm9udHMuZ3N0YXRpYy5jb20iPg0KICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vZm9udHMuYnVubnkubmV0L2Nzcz9mYW1pbHk9TnVuaXRvIiByZWw9InN0eWxlc2hlZXQiPg0KDQogICAgPCEtLSBTY3JpcHRzIC0tPg0KICAgIEB2aXRlKFsncmVzb3VyY2VzL3Nhc3MvYXBwLnNjc3MnLCAncmVzb3VyY2VzL2pzL2FwcC5qcyddKQ0KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2tpdC5mb250YXdlc29tZS5jb20vM2U0YzFhNjkzMS5qcyIgY3Jvc3NvcmlnaW49ImFub255bW91cyI+PC9zY3JpcHQ+DQoNCiAgICA8IS0tIFN0eWxlcyBhbmQgc2NyaXB0cyAtLT4NCiAgIEBlbnYoWydsb2NhbCcsJ2RldmVsb3BtZW50J10pDQogICAgICAgQHZpdGUoWydyZXNvdXJjZXMvc2Fzcy9hcHAuc2NzcycsICdyZXNvdXJjZXMvanMvYm9vdHN0cmFwLmpzJ10pICANCiAgIEBlbmRlbnYNCiAgIEBlbnYoWydwcm9kdWN0aW9uJ10pDQogICAgICAgQHBocA0KICAgICAgICAgICAkbWFuaWZlc3QgPSBqc29uX2RlY29kZShmaWxlX2dldF9jb250ZW50cyhwdWJsaWNfcGF0aCgnYnVpbGQvbWFuaWZlc3QuanNvbicpKSwgdHJ1ZSk7DQogICAgICAgQGVuZHBocA0KICAgICAgIDxzY3JpcHQgdHlwZT0ibW9kdWxlIiBzcmM9Ii9idWlsZC97eyAkbWFuaWZlc3RbJ3Jlc291cmNlcy9qcy9hcHAuanMnXVsnZmlsZSddIH19Ij48L3NjcmlwdD4NCiAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9idWlsZC97eyAkbWFuaWZlc3RbJ3Jlc291cmNlcy9zYXNzL2FwcC5zY3NzJ11bJ2ZpbGUnXSB9fSI+DQogICBAZW5kZW52DQoNCg0KPC9oZWFkPg0KPGJvZHk+DQogICAgPGRpdiBpZD0iYXBwIj4NCiAgICAgICAgPG5hdiBjbGFzcz0ibmF2YmFyIG5hdmJhci1leHBhbmQtbWQiID4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxlZnQiPg0KICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1nL2xvZ28ucG5nIiBhbHQ9IkxvZ28gR2VvTWlyIiBjbGFzcz0ibWlkYS1sb2dvIi8+DQogICAgICAgICAgICAgICAgPGgxIHN0eWxlPSJtYXJnaW4tbGVmdDoyMHB4OyBjb2xvcjp3aGl0ZTsiPkdlb01pcjwvaDE+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnczLm9yZy9XQUkvV0NBRzJBQUEtQ29uZm9ybWFuY2UiDQogICAgICAgICAgICAgICAgdGl0bGU9IkV4cGxhbmF0aW9uIG9mIFdDQUcgMiBMZXZlbCBBQUEgY29uZm9ybWFuY2UiPg0KICAgICAgICAgICAgICAgIDxpbWcgaGVpZ2h0PSIzMiIgd2lkdGg9Ijg4Ig0KICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vd3d3LnczLm9yZy9XQUkvd2NhZzJBQUEiDQogICAgICAgICAgICAgICAgICAgIGFsdD0iTGV2ZWwgQUFBIGNvbmZvcm1hbmNlLA0KICAgICAgICAgICAgICAgICAgICBXM0MgV0FJIFdlYiBDb250ZW50IEFjY2Vzc2liaWxpdHkgR3VpZGVsaW5lcyAyLjAiPg0KICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2VudGVyIj4NCg0KICAgICAgICAgICAgICAgIDwhLS0gTGVmdCBTaWRlIE9mIE5hdmJhciAtLT4NCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Im5hdmJhci1uYXYgbWUtYXV0byI+DQoNCiAgICAgICAgICAgICAgICA8L3VsPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ1c2NhZG9yIj4NCiAgICAgICAgICAgICAgICAgICAgPGZvcm0gY2xhc3M9ImQtZmxleCIgcm9sZT0ic2VhcmNoIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjp3aGl0ZTsiIGNsYXNzPSJmb3JtLWNvbnRyb2wgbWUtMiIgdHlwZT0ic2VhcmNoIiBwbGFjZWhvbGRlcj0iU2VhcmNoIiBhcmlhLWxhYmVsPSJTZWFyY2giPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLXN1Y2Nlc3MiIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiNmZmQ3NGQ7IGNvbG9yOmJsYWNrOyBib3JkZXI6MnB4IHNvbGlkIGJsYWNrOyIgdHlwZT0ic3VibWl0Ij5TZWFyY2g8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgPC9mb3JtPg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQoNCiAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyaWdodCI+DQogICAgICAgICAgICAgICAgPCEtLSBSaWdodCBTaWRlIE9mIE5hdmJhciAtLT4NCiAgICAgICAgICAgICAgICA8YSBjbGFzcz0iYnRuIiBocmVmPSIvYWJvdXQiPlNvYnJlIE5vc290cm9zPC9hPg0KICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJidG4iIGhyZWY9Ii9jb250YWN0Ij5Db250YWN0YW5vczwvYT4NCg0KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2YmFyLW5hdiBtcy1hdXRvIiBzdHlsZT0ibWFyZ2luLXJpZ2h0OjUwcHg7IGNvbG9yOndoaXRlOyI+DQogICAgICAgICAgICAgICAgQGluY2x1ZGUoJ3BhcnRpYWxzLmxhbmd1YWdlLXN3aXRjaGVyJykNCiAgICAgICAgICAgICAgICAgICAgPCEtLSBBdXRoZW50aWNhdGlvbiBMaW5rcyAtLT4NCiAgICAgICAgICAgICAgICAgICAgQGd1ZXN0DQogICAgICAgICAgICAgICAgICAgICAgICBAaWYgKFJvdXRlOjpoYXMoJ2xvZ2luJykpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJuYXYtbGluayIgaHJlZj0ie3sgcm91dGUoJ2xvZ2luJykgfX0iPnt7IF9fKCdMb2dpbicpIH19PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICBAZW5kaWYNCg0KICAgICAgICAgICAgICAgICAgICAgICAgQGlmIChSb3V0ZTo6aGFzKCdyZWdpc3RlcicpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibmF2LWxpbmsiIGhyZWY9Int7IHJvdXRlKCdyZWdpc3RlcicpIH19Ij57eyBfXygnUmVnaXN0ZXInKSB9fTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgQGVuZGlmDQogICAgICAgICAgICAgICAgICAgIEBlbHNlDQogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im5hdi1pdGVtIGRyb3Bkb3duIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBzdHlsZT0iY29sb3I6d2hpdGU7ImlkPSJuYXZiYXJEcm9wZG93biIgY2xhc3M9Im5hdi1saW5rIGRyb3Bkb3duLXRvZ2dsZSIgaHJlZj0iIyIgcm9sZT0iYnV0dG9uIiBkYXRhLWJzLXRvZ2dsZT0iZHJvcGRvd24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIiB2LXByZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgQXV0aDo6dXNlcigpLT5uYW1lIH19DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24tbWVudSBkcm9wZG93bi1tZW51LWVuZCIgYXJpYS1sYWJlbGxlZGJ5PSJuYXZiYXJEcm9wZG93biI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOmJsYWNrOyIgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iIGhyZWY9Int7IHJvdXRlKCdsb2dvdXQnKSB9fSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uY2xpY2s9ImV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xvZ291dC1mb3JtJykuc3VibWl0KCk7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IF9fKCdMb2dvdXQnKSB9fQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0gaWQ9ImxvZ291dC1mb3JtIiBhY3Rpb249Int7IHJvdXRlKCdsb2dvdXQnKSB9fSIgbWV0aG9kPSJQT1NUIiBjbGFzcz0iZC1ub25lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBjc3JmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgICAgIEBlbmRndWVzdA0KICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIA0KICAgICAgICA8L25hdj4NCg0KICAgICAgICA8bWFpbj4NCiAgICAgICAgICAgIEBpbmNsdWRlKCdmbGFzaCcpDQogICAgICAgICAgICBAeWllbGQoJ2NvbnRlbnQnKSAgIA0KICAgICAgICA8L21haW4+DQogICAgPC9kaXY+DQo8L2JvZHk+DQo8L2h0bWw+DQoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";