1711241706
waR3U4bTeM%3Aae44c45794dab674adb03000a8c76637-77f6067b3a4975060bba48c25b1799c9
s:5304:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6Ijc3ZjYwNjdiM2E0OTc1MDYwYmJhNDhjMjViMTc5OWM5IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTg6ImNoZWNrYm94LmJsYWRlLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjcxOiJ2ZW5kb3IvYmFja3BhY2svY3J1ZC9zcmMvcmVzb3VyY2VzL3ZpZXdzL2NydWQvZmllbGRzL2NoZWNrYm94LmJsYWRlLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MzAyMDoie3stLSBjaGVja2JveCBmaWVsZCAtLX19CgpAcGhwCiAgJGZpZWxkWyd2YWx1ZSddID0gb2xkX2VtcHR5X29yX251bGwoJGZpZWxkWyduYW1lJ10sICcnKSA/PyAgJGZpZWxkWyd2YWx1ZSddID8/ICRmaWVsZFsnZGVmYXVsdCddID8/ICcnOwpAZW5kcGhwCkBpbmNsdWRlKCdjcnVkOjpmaWVsZHMuaW5jLndyYXBwZXJfc3RhcnQnKQogICAgQGluY2x1ZGUoJ2NydWQ6OmZpZWxkcy5pbmMudHJhbnNsYXRhYmxlX2ljb24nKQogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Int7ICRmaWVsZFsnbmFtZSddIH19IiB2YWx1ZT0ie3sgJGZpZWxkWyd2YWx1ZSddIH19Ij4KICAgIAkgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIKICAgICAgICAgIGRhdGEtaW5pdC1mdW5jdGlvbj0iYnBGaWVsZEluaXRDaGVja2JveCIKCiAgICAgICAgICBAaWYgKChib29sKSRmaWVsZFsndmFsdWUnXSkKICAgICAgICAgICAgICAgICBjaGVja2VkPSJjaGVja2VkIgogICAgICAgICAgQGVuZGlmCgogICAgICAgICAgQGlmIChpc3NldCgkZmllbGRbJ2F0dHJpYnV0ZXMnXSkpCiAgICAgICAgICAgICAgQGZvcmVhY2ggKCRmaWVsZFsnYXR0cmlidXRlcyddIGFzICRhdHRyaWJ1dGUgPT4gJHZhbHVlKQogICAgCQkJe3sgJGF0dHJpYnV0ZSB9fT0ie3sgJHZhbHVlIH19IgogICAgICAgIAkgIEBlbmRmb3JlYWNoCiAgICAgICAgICBAZW5kaWYKICAgICAgICAgID4KICAgIAk8bGFiZWwgY2xhc3M9ImZvbnQtd2VpZ2h0LW5vcm1hbCBtYi0wIj57ISEgJGZpZWxkWydsYWJlbCddICEhfTwvbGFiZWw+CgogICAgICAgIHt7LS0gSElOVCAtLX19CiAgICAgICAgQGlmIChpc3NldCgkZmllbGRbJ2hpbnQnXSkpCiAgICAgICAgICAgIDxwIGNsYXNzPSJoZWxwLWJsb2NrIj57ISEgJGZpZWxkWydoaW50J10gISF9PC9wPgogICAgICAgIEBlbmRpZgpAaW5jbHVkZSgnY3J1ZDo6ZmllbGRzLmluYy53cmFwcGVyX2VuZCcpCgp7ey0tICMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyAtLX19Cnt7LS0gRXh0cmEgQ1NTIGFuZCBKUyBmb3IgdGhpcyBwYXJ0aWN1bGFyIGZpZWxkIC0tfX0Ke3stLSBJZiBhIGZpZWxkIHR5cGUgaXMgc2hvd24gbXVsdGlwbGUgdGltZXMgb24gYSBmb3JtLCB0aGUgQ1NTIGFuZCBKUyB3aWxsIG9ubHkgYmUgbG9hZGVkIG9uY2UgLS19fQoKICAgIHt7LS0gRklFTEQgSlMgLSB3aWxsIGJlIGxvYWRlZCBpbiB0aGUgYWZ0ZXJfc2NyaXB0cyBzZWN0aW9uIC0tfX0KICAgIEBwdXNoKCdjcnVkX2ZpZWxkc19zY3JpcHRzJykKICAgICAgICBAbG9hZE9uY2UoJ2JwRmllbGRJbml0Q2hlY2tib3gnKQogICAgICAgIDxzY3JpcHQ+CiAgICAgICAgICAgIGZ1bmN0aW9uIGJwRmllbGRJbml0Q2hlY2tib3goZWxlbWVudCkgewogICAgICAgICAgICAgICAgdmFyIGhpZGRlbl9lbGVtZW50ID0gZWxlbWVudC5zaWJsaW5ncygnaW5wdXRbdHlwZT1oaWRkZW5dJyk7CiAgICAgICAgICAgICAgICB2YXIgaWQgPSAnY2hlY2tib3hfJytNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwMDAwKTsKCiAgICAgICAgICAgICAgICAvLyBtYWtlIHN1cmUgdGhlIHZhbHVlIGlzIGEgYm9vbGVhbiAoc28gaXQgd2lsbCBwYXNzIHZhbGlkYXRpb24pCiAgICAgICAgICAgICAgICBpZiAoaGlkZGVuX2VsZW1lbnQudmFsKCkgPT09ICcnKSBoaWRkZW5fZWxlbWVudC52YWwoMCkudHJpZ2dlcignY2hhbmdlJyk7CgogICAgICAgICAgICAgICAgLy8gc2V0IHVuaXF1ZSBJRHMgc28gdGhhdCBsYWJlbHMgYXJlIGNvcnJlbGF0ZWQgd2l0aCBpbnB1dHMKICAgICAgICAgICAgICAgIGVsZW1lbnQuYXR0cignaWQnLCBpZCk7CiAgICAgICAgICAgICAgICBlbGVtZW50LnNpYmxpbmdzKCdsYWJlbCcpLmF0dHIoJ2ZvcicsIGlkKTsKCiAgICAgICAgICAgICAgICAvLyBzZXQgdGhlIGRlZmF1bHQgY2hlY2tlZC91bmNoZWNrZWQgc3RhdGUKICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBmaWVsZCBoYXMgYmVlbiBsb2FkZWQgd2l0aCBqYXZhc2NyaXB0CiAgICAgICAgICAgICAgICBpZiAoaGlkZGVuX2VsZW1lbnQudmFsKCkgIT0gMCkgewogICAgICAgICAgICAgICAgICBlbGVtZW50LnByb3AoJ2NoZWNrZWQnLCAnY2hlY2tlZCcpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgZWxlbWVudC5wcm9wKCdjaGVja2VkJywgZmFsc2UpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGhpZGRlbl9lbGVtZW50Lm9uKCdDcnVkRmllbGQ6ZGlzYWJsZScsIGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgICAgICAgZWxlbWVudC5wcm9wKCdkaXNhYmxlZCcsIHRydWUpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBoaWRkZW5fZWxlbWVudC5vbignQ3J1ZEZpZWxkOmVuYWJsZScsIGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgICAgICAgZWxlbWVudC5yZW1vdmVBdHRyKCdkaXNhYmxlZCcpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgLy8gd2hlbiB0aGUgY2hlY2tib3ggaXMgY2xpY2tlZAogICAgICAgICAgICAgICAgLy8gc2V0IHRoZSBjb3JyZWN0IHZhbHVlIG9uIHRoZSBoaWRkZW4gaW5wdXQKICAgICAgICAgICAgICAgIGVsZW1lbnQuY2hhbmdlKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5pcygiOmNoZWNrZWQiKSkgewogICAgICAgICAgICAgICAgICAgIGhpZGRlbl9lbGVtZW50LnZhbCgxKS50cmlnZ2VyKCdjaGFuZ2UnKTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBoaWRkZW5fZWxlbWVudC52YWwoMCkudHJpZ2dlcignY2hhbmdlJyk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0KICAgICAgICA8L3NjcmlwdD4KICAgICAgICBAZW5kTG9hZE9uY2UKICAgIEBlbmRwdXNoCgp7ey0tIEVuZCBvZiBFeHRyYSBDU1MgYW5kIEpTIC0tfX0Ke3stLSAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgLS19fQoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";