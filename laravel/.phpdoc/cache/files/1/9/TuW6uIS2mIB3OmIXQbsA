1711241705
waR3U4bTeM%3A1826ee8bba901f121861ced26c5e4f6d-b087b0beb5b2e957df33eb0210467c3e
s:5912:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImIwODdiMGJlYjViMmU5NTdkZjMzZWIwMjEwNDY3YzNlIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6ODoiYmFzZS5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo1MToidmVuZG9yL2JhY2twYWNrL2NydWQvc3JjL3Jlc291cmNlcy9sYW5nL2VuL2Jhc2UucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czozNTA3OiI8P3BocAoKcmV0dXJuIFsKCiAgICAvKgogICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICB8IEJhY2twYWNrXEJhc2UgTGFuZ3VhZ2UgTGluZXMKICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgKi8KCiAgICAncmVnaXN0cmF0aW9uX2Nsb3NlZCcgICAgPT4gJ1JlZ2lzdHJhdGlvbiBpcyBjbG9zZWQuJywKICAgICdub19lbWFpbF9jb2x1bW4nICAgICAgICA9PiAnVXNlcnMgZG8gbm90IGhhdmUgYW4gYXNzb2NpYXRlZCBlbWFpbCBhZGRyZXNzLicsCiAgICAnZmlyc3RfcGFnZV95b3Vfc2VlJyAgICAgPT4gJ1RoZSBmaXJzdCBwYWdlIHlvdSBzZWUgYWZ0ZXIgbG9naW4nLAogICAgJ2xvZ2luX3N0YXR1cycgICAgICAgICAgID0+ICdMb2dpbiBzdGF0dXMnLAogICAgJ2xvZ2dlZF9pbicgICAgICAgICAgICAgID0+ICdZb3UgYXJlIGxvZ2dlZCBpbiEnLAogICAgJ3RvZ2dsZV9uYXZpZ2F0aW9uJyAgICAgID0+ICdUb2dnbGUgbmF2aWdhdGlvbicsCiAgICAnYWRtaW5pc3RyYXRpb24nICAgICAgICAgPT4gJ0FETUlOSVNUUkFUSU9OJywKICAgICd1c2VyJyAgICAgICAgICAgICAgICAgICA9PiAnVVNFUicsCiAgICAnbG9nb3V0JyAgICAgICAgICAgICAgICAgPT4gJ0xvZ291dCcsCiAgICAnbG9naW4nICAgICAgICAgICAgICAgICAgPT4gJ0xvZ2luJywKICAgICdyZWdpc3RlcicgICAgICAgICAgICAgICA9PiAnUmVnaXN0ZXInLAogICAgJ25hbWUnICAgICAgICAgICAgICAgICAgID0+ICdOYW1lJywKICAgICdlbWFpbF9hZGRyZXNzJyAgICAgICAgICA9PiAnRS1tYWlsIGFkZHJlc3MnLAogICAgJ3Bhc3N3b3JkJyAgICAgICAgICAgICAgID0+ICdQYXNzd29yZCcsCiAgICAnb2xkX3Bhc3N3b3JkJyAgICAgICAgICAgPT4gJ09sZCBwYXNzd29yZCcsCiAgICAnbmV3X3Bhc3N3b3JkJyAgICAgICAgICAgPT4gJ05ldyBwYXNzd29yZCcsCiAgICAnY29uZmlybV9wYXNzd29yZCcgICAgICAgPT4gJ0NvbmZpcm0gcGFzc3dvcmQnLAogICAgJ3JlbWVtYmVyX21lJyAgICAgICAgICAgID0+ICdSZW1lbWJlciBtZScsCiAgICAnZm9yZ290X3lvdXJfcGFzc3dvcmQnICAgPT4gJ0ZvcmdvdCBZb3VyIFBhc3N3b3JkPycsCiAgICAncmVzZXRfcGFzc3dvcmQnICAgICAgICAgPT4gJ1Jlc2V0IFBhc3N3b3JkJywKICAgICdzZW5kX3Jlc2V0X2xpbmsnICAgICAgICA9PiAnU2VuZCBQYXNzd29yZCBSZXNldCBMaW5rJywKICAgICdjbGlja19oZXJlX3RvX3Jlc2V0JyAgICA9PiAnQ2xpY2sgaGVyZSB0byByZXNldCB5b3VyIHBhc3N3b3JkJywKICAgICdjaGFuZ2VfcGFzc3dvcmQnICAgICAgICA9PiAnQ2hhbmdlIFBhc3N3b3JkJywKICAgICd1bmF1dGhvcml6ZWQnICAgICAgICAgICA9PiAnVW5hdXRob3JpemVkLicsCiAgICAnZGFzaGJvYXJkJyAgICAgICAgICAgICAgPT4gJ0Rhc2hib2FyZCcsCiAgICAnaGFuZGNyYWZ0ZWRfYnknICAgICAgICAgPT4gJ0hhbmRjcmFmdGVkIGJ5JywKICAgICdwb3dlcmVkX2J5JyAgICAgICAgICAgICA9PiAnUG93ZXJlZCBieScsCiAgICAnbXlfYWNjb3VudCcgICAgICAgICAgICAgPT4gJ015IEFjY291bnQnLAogICAgJ3VwZGF0ZV9hY2NvdW50X2luZm8nICAgID0+ICdVcGRhdGUgQWNjb3VudCBJbmZvJywKICAgICdzYXZlJyAgICAgICAgICAgICAgICAgICA9PiAnU2F2ZScsCiAgICAnY2FuY2VsJyAgICAgICAgICAgICAgICAgPT4gJ0NhbmNlbCcsCiAgICAnZXJyb3InICAgICAgICAgICAgICAgICAgPT4gJ0Vycm9yJywKICAgICdzdWNjZXNzJyAgICAgICAgICAgICAgICA9PiAnU3VjY2VzcycsCiAgICAnd2FybmluZycgICAgICAgICAgICAgICAgPT4gJ1dhcm5pbmcnLAogICAgJ25vdGljZScgICAgICAgICAgICAgICAgID0+ICdOb3RpY2UnLAogICAgJ29sZF9wYXNzd29yZF9pbmNvcnJlY3QnID0+ICdPbGQgcGFzc3dvcmQgaXMgaW5jb3JyZWN0LicsCiAgICAncGFzc3dvcmRfZG9udF9tYXRjaCcgICAgPT4gJ1Bhc3N3b3JkcyBkbyBub3QgbWF0Y2guJywKICAgICdwYXNzd29yZF9lbXB0eScgICAgICAgICA9PiAnTWFrZSBzdXJlIGJvdGggcGFzc3dvcmQgZmllbGRzIGFyZSBmaWxsZWQgb3V0LicsCiAgICAncGFzc3dvcmRfdXBkYXRlZCcgICAgICAgPT4gJ1Bhc3N3b3JkIHVwZGF0ZWQuJywKICAgICdhY2NvdW50X3VwZGF0ZWQnICAgICAgICA9PiAnQWNjb3VudCB1cGRhdGVkIHN1Y2Nlc3NmdWxseS4nLAogICAgJ3Vua25vd25fZXJyb3InICAgICAgICAgID0+ICdBbiB1bmtub3duIGVycm9yIGhhcyBvY2N1cnJlZC4gUGxlYXNlIHRyeSBhZ2Fpbi4nLAogICAgJ2Vycm9yX3NhdmluZycgICAgICAgICAgID0+ICdFcnJvciB3aGlsZSBzYXZpbmcuIFBsZWFzZSB0cnkgYWdhaW4uJywKICAgICd3ZWxjb21lJyAgICAgICAgICAgICAgICA9PiAnV2VsY29tZSEnLAogICAgJ3VzZV9zaWRlYmFyJyAgICAgICAgICAgID0+ICdVc2UgdGhlIHNpZGViYXIgdG8gdGhlIGxlZnQgdG8gY3JlYXRlLCBlZGl0IG9yIGRlbGV0ZSBjb250ZW50LicsCgogICAgJ3Bhc3N3b3JkX3Jlc2V0JyA9PiBbCiAgICAgICAgJ2dyZWV0aW5nJyA9PiAnSGVsbG8hJywKICAgICAgICAnc3ViamVjdCcgID0+ICdSZXNldCBQYXNzd29yZCBOb3RpZmljYXRpb24nLAogICAgICAgICdsaW5lXzEnICAgPT4gJ1lvdSBhcmUgcmVjZWl2aW5nIHRoaXMgZW1haWwgYmVjYXVzZSB3ZSByZWNlaXZlZCBhIHBhc3N3b3JkIHJlc2V0IHJlcXVlc3QgZm9yIHlvdXIgYWNjb3VudC4nLAogICAgICAgICdsaW5lXzInICAgPT4gJ0NsaWNrIHRoZSBidXR0b24gYmVsb3cgdG8gcmVzZXQgeW91ciBwYXNzd29yZDonLAogICAgICAgICdidXR0b24nICAgPT4gJ1Jlc2V0IFBhc3N3b3JkJywKICAgICAgICAnbm90aWNlJyAgID0+ICdJZiB5b3UgZGlkIG5vdCByZXF1ZXN0IGEgcGFzc3dvcmQgcmVzZXQsIG5vIGZ1cnRoZXIgYWN0aW9uIGlzIHJlcXVpcmVkLicsCiAgICBdLAoKICAgICdzdGVwJyAgICAgICAgICAgICAgICAgPT4gJ1N0ZXAnLAogICAgJ2NvbmZpcm1fZW1haWwnICAgICAgICA9PiAnQ29uZmlybSBFbWFpbCcsCiAgICAnY2hvb3NlX25ld19wYXNzd29yZCcgID0+ICdDaG9vc2UgTmV3IFBhc3N3b3JkJywKICAgICdjb25maXJtX25ld19wYXNzd29yZCcgPT4gJ0NvbmZpcm0gbmV3IHBhc3N3b3JkJywKICAgICd0aHJvdHRsZWQnICAgICAgICAgICAgPT4gJ1lvdSBoYXZlIGFscmVhZHkgcmVxdWVzdGVkIGEgcGFzc3dvcmQgcmVzZXQgcmVjZW50bHkuIFBsZWFzZSBjaGVjayB5b3VyIGVtYWlsLiBJZiB5b3UgZG8gbm90IHJlY2VpdmUgb3VyIGVtYWlsLCBwbGVhc2UgcmV0cnkgbGF0ZXIuJywKICAgICd0aHJvdHRsZWRfcmVxdWVzdCcgICAgPT4gJ1lvdSBoYXZlIGV4Y2VlZGVkIHRoZSBsaW1pdCBvZiB0cmllcy4gUGxlYXNlIHdhaXQgYSBmZXcgbWludXRlcyBhbmQgdHJ5IGFnYWluLicsCgpdOwoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";